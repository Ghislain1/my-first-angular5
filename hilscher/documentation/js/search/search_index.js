var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["1.7.0","angular","app","artifact","automat","build","chang","check","cli","code","compon","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","e2","end","execut","file","flag","further","gener","go","help","http://localhost:4200","index","karma","match","more","myfirstangular5","name","navig","new","ng","out","prod","product","project","protractor","readm","reload","result","run","scaffold","serv","server","sourc","store","test","unit","us","version","via"],"overview.html":["10","11","12","13","16","6","browser","class","compon","inject","interfac","match","modul","out","overview","reset","result","rout","support","svg","zoom"],"modules.html":["aboutmodul","aboutroutinemodul","appmodul","approutinemodul","brows","browser","coremodul","homemodul","homeroutinemodul","layoutmodul","match","modul","outputmodul","outputroutinemodul","result","support","svg","topologymodul","topologyroutinemodul"],"modules/AboutModule.html":["aboutdescriptioncompon","aboutmodul","aboutroutinemodul","angular/common","angular/cor","browser","class","commonmodul","components/about","data.servic","declar","description.compon","dummynodetemplateprovid","dummyshapeprovid","export","file","import","info","linkdataservic","match","modul","ngmodul","node","nodedataservic","out","provid","reset","result","routine.modul","services/dummi","services/dummy.shape.provid","services/link","services/nod","sourc","src/app/about/about.module.t","support","svg","template.provid","zoom"],"modules/AboutRoutineModule.html":["aboutdescriptioncompon","aboutrout","aboutroutinemodul","add","angular/common","angular/cor","angular/rout","appabout","browser","call","class","commonmodul","compon","components/about","const","desc","descrip","description.compon","export","file","forroot","home","import","info","match","modul","ngmodul","out","path","redirect","redirectto","registri","reset","result","rout","routermodul","routermodule.forchild(aboutrout","routine.module.t","sourc","src/app/about/about","support","svg","zoom"],"modules/AppModule.html":["about/about.modul","aboutmodul","angular/common/http","angular/cor","angular/platform","angular/rout","app","app.compon","appcompon","appmodul","approutinemodul","bootstrap","browser","browsermodul","class","core/core.modul","coremodul","declar","export","file","home/home.modul","homemodul","httpclient","httpclientmodul","import","info","layout/layout.modul","layoutmodul","match","modul","ngmodul","out","output/output.modul","outputmodul","provid","reset","result","routermodul","routine.modul","sourc","src/app/app.module.t","support","svg","topology/topology.modul","topologymodul","zoom"],"modules/AppRoutineModule.html":["angular/common","angular/cor","angular/rout","approut","approutinemodul","browser","class","commonmodul","const","export","file","full","home","import","info","match","modul","ngmodul","out","path","pathmatch","redirectto","reset","result","rout","routermodul","routermodule.forroot(approutes,{enabletracing:tru","routine.module.t","sourc","src/app/app","support","svg","zoom"],"modules/CoreModule.html":["angular/common","angular/common/http","angular/cor","browser","class","commonmodul","configservic","coremodul","declar","error","export","file","handler.servic","httpclientmodul","httperrorhandl","import","info","loggingservic","match","messageservic","modul","ngmodul","out","provid","providers:[loggingservic","reset","result","servic","services/config","services/http","services/logging.servic","services/message.servic","services/topology.servic","sourc","src/app/core/core.module.t","support","svg","topologyservic","zoom"],"modules/HomeModule.html":["angular/common","angular/cor","browser","class","commonmodul","components/description/hom","components/home.compon","declar","description.compon","export","file","home","homecompon","homedescriptioncompon","homemodul","homeroutinemodul","import","info","match","modul","ngmodul","out","reset","result","routine.modul","sourc","src/app/home/home.module.t","support","svg","zoom"],"modules/HomeRoutineModule.html":["add","angular/common","angular/cor","angular/rout","browser","call","class","commonmodul","compon","components/description/hom","components/home.compon","const","descrip","description.compon","export","file","forroot","home","homecompon","homedescriptioncompon","homerout","homeroutinemodul","import","info","match","modul","ngmodul","out","path","registri","reset","result","rout","routermodul","routermodule.forchild(homerout","routine.module.t","sourc","src/app/home/hom","support","svg","zoom"],"modules/LayoutModule.html":["angular/common","angular/cor","angular/rout","browser","class","commonmodul","components/footer/layout","components/header/layout","components/main/layout","components/navi/layout","declar","export","file","footer.compon","header.compon","import","info","layoutfootercompon","layoutheadercompon","layoutmaincompon","layoutmodul","layoutnavicompon","main.compon","match","modul","navi.compon","ngmodul","out","reset","result","routermodul","sourc","src/app/layout/layout.module.t","support","svg","zoom"],"modules/OutputModule.html":["angular/common","angular/cor","browser","class","commonmodul","core/core.modul","coremodul","declar","export","file","import","info","match","modul","ngmodul","out","output","output.compon","outputcompon","outputmodul","outputroutinemodul","outputservic","provid","providers:[outputservic","reset","result","routine.modul","services/output.servic","sourc","src/app/output/output.module.t","support","svg","zoom"],"modules/OutputRoutineModule.html":["angular/common","angular/cor","angular/rout","app","browser","class","commonmodul","compon","const","export","file","import","info","match","modul","ngmodul","out","output","output.compon","outputcompon","outputrout","outputroutinemodul","path","reset","result","rout","routermodul","routermodule.forchild(outputrout","routine.module.t","sourc","src/app/output/output","support","svg","zoom"],"modules/TopologyModule.html":["angular/common","angular/cor","angular/form","browser","candeactivateguard","class","commonmodul","components/topolog","core/guard/can","core/utils/diagram.servic","core/utils/link","core/utils/nod","deactiv","declar","detail.compon","detail/topolog","diagramservic","diagramservice,linktemplateservic","export","file","formsmodul","guard.servic","home.compon","home/topolog","import","info","linktemplateservic","list.compon","list/topolog","match","modul","ngmodul","nodetemplateservic","out","provid","reset","result","routine.modul","sourc","src/app/topology/topology.module.t","support","svg","template.servic","topolog","topologydetailcompon","topologyhomecompon","topologylistcompon","topologymodul","topologyroutinemodul","topologyworkercompon","worker.compon","worker/topolog","zoom"],"modules/TopologyRoutineModule.html":["angular/cor","angular/rout","app","browser","candeactiv","candeactivateguard","children","class","compon","components/topolog","const","core/guard/can","de","deactiv","detail","detail.compon","detail/topolog","export","file","guard.servic","home","home.compon","home/topolog","id","import","info","list.compon","list/topolog","match","modul","ngmodul","out","outlet","path","provid","reset","resolv","resolver.servic","result","rout","router","routermodul","routermodule.forchild(toporout","routine.module.t","services/topolog","sourc","src/app/topology/topolog","support","svg","topolog","topologydetailcompon","topologydetailresolv","topologydetailresolver,topologyworkerresolv","topologyhomecompon","topologylistcompon","topologyroutinemodul","topologyworkercompon","topologyworkerresolv","toporout","worker","worker.compon","worker/topolog","zoom"],"components/AboutDescriptionComponent.html":["0","0.0","1","1.0","100","300","5","8","_side","aboutdescriptioncompon","alert(s.source);return","angular/cor","auto","bottom","center","class","compon","concis","constructor","constructor(dummynodetemplateprovid","constructor(priv","content","cursor","data.servic","defin","description.component.css","description.component.html","description.component.t","desireds","diagram","diagramdiv","dummynodetemplateprovid","dummyshapeprovid","element","elementref","ellips","end","errorfunction:(s,ss","export","figur","file","fill","fromlink","fromspot","ghislain","go","go.binding(\"fil","go.binding(\"itemarray","go.binding(\"portid","go.binding(\"source\",\"src","go.binding(\"text\",\"devicenam","go.binding(\"text\",\"tool","go.brush","go.diagram","go.graphlinksmodel(nodedata","go.graphobject.mak","go.margin(0","go.nod","go.panel","go.part","go.pictur","go.shap","go.size(12","go.size(300,140","go.spot.bottom","go.spot.cent","go.textblock","go.textblock,{row:2","goj","goodby","green","height","horizont","implement","import","info","initialcontentalign","itemtempl","lavend","linear","linkdataservic","margin","match","metadata","method","mynod","new","ngoninit","node","node2","nodedatas=[{devicename:\"devic","nodedataservic","nr.1","nr.2","nr1","nr1\",devicename:\"devic","null","observ","oninit","pic:\"pictur","place","pointer","port","portcolor","portid","portid:\"port1\",portcolor:\"#7fff","ports:[{portid:\"port0\",portcolor:\"#c25c","ports:[{portid:\"port0\",portcolor:\"#f1230","portsiz","privat","properti","protractor","rectangl","result","return","roundedrectangl","roundedrectangle\",{fill:null,desiredsize:new","row:0","row:1","rxjs/observ","services/dummi","services/dummy.shape.provid","services/link","services/nod","sourc","spahe","src/app/about/components/about","src:\"/assets/images/cfix.png","stroke","strokewidth","styleurl","table\",{background:\"green","templat","template.provid","templateurl","text","this.diagram","this.diagram.add(ghislain","this.diagram.add(mynod","this.diagram.model","this.diagram.nodetempl","this.diagramdiv.nativeel","this.dummyshapeprovider.getallshapebyfigur","this.dummyshapeprovider.getbyusingpanel","this.usingpanels_1","this.usingperson","tolink","tool:\"tool","tospot","true","usingpanel","usingpanels_1","var","vertic","viewchild","viewchild('mydiagramdiv","violet","violetbrush","void","width"],"components/AppComponent.html":["angular/cor","app","app.component.css","app.component.html","appcompon","class","compon","configservic","constructor","constructor(configservic","core/services/config","default","export","file","implement","import","info","match","metadata","ngoninit","oninit","privat","properti","result","root","selector","servic","sourc","src/app/app.component.t","string","styleurl","templateurl","this.configservice.setconfig","titl","valu"],"components/HomeComponent.html":["angular/cor","app","class","compon","configservic","configservice:configservic","constructor","constructor(configservic","core/services/config","export","file","home","home.component.css","home.component.html","homecompon","implement","import","info","match","metadata","ngoninit","oninit","privat","properti","result","selector","servic","sourc","src/app/home/components/home.component.t","string","styleurl","templateurl","this.configservice.getconfig_2().subscribe(valu","this.topologyurl","topologyurl","value.topologyurl"],"components/HomeDescriptionComponent.html":["alert(\"homedescriptioncompon","angular/cor","app","class","compon","constructor","descript","description.component.css","description.component.html","description.component.t","export","file","home","homedescriptioncompon","implement","import","info","init","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/home/components/description/hom","styleurl","templateurl"],"components/LayoutFooterComponent.html":["angular/cor","app","class","compon","console.log","export","file","footer","footer.component.css","footer.component.html","footer.component.t","hostbind","implement","import","info","init","layout","layoutfootercompon","match","metadata","ngoninit","observ","oninit","result","rxjs/add/operator/switchmap","rxjs/observ","selector","sourc","src/app/layout/components/footer/layout","styleurl","templateurl"],"components/LayoutHeaderComponent.html":["angular/cor","app","class","compon","console.log","export","file","header","header.component.css","header.component.html","header.component.t","hostbind","implement","import","info","init","layout","layoutheadercompon","match","metadata","ngoninit","observ","oninit","result","rxjs/add/operator/switchmap","rxjs/observ","selector","sourc","src/app/layout/components/header/layout","styleurl","templateurl"],"components/LayoutMainComponent.html":["angular/cor","app","class","compon","console.log","export","file","hostbind","implement","import","info","init","layout","layoutmaincompon","main","main.component.css","main.component.html","main.component.t","match","metadata","ngoninit","observ","oninit","result","rxjs/add/operator/switchmap","rxjs/observ","selector","sourc","src/app/layout/components/main/layout","styleurl","templateurl"],"components/LayoutNaviComponent.html":["angular/cor","app","class","compon","console.log","export","file","hostbind","implement","import","info","init","layout","layoutnavicompon","match","metadata","navi","navi.component.css","navi.component.html","navi.component.t","ngoninit","observ","oninit","result","rxjs/add/operator/switchmap","rxjs/observ","selector","sourc","src/app/layout/components/navi/layout","styleurl","templateurl"],"components/OutputComponent.html":["angular/cor","app","class","compon","console.info(this.outputlist","constructor","constructor(outputservic","constructor(priv","export","file","implement","import","info","match","metadata","ngoninit","oninit","output","output.component.css","output.component.html","outputcompon","outputlist","outputservic","properti","result","selector","services/output.servic","sourc","src/app/output/output.component.t","string","styleurl","templateurl","this.outputlist","this.outputservice.getal"],"components/TopologyDetailComponent.html":["activatedrout","allow","angular/cor","angular/rout","app","ask","boolean","cancel","candeactiv","chang","class","compon","constructor","constructor(rout","core/models/topolog","core/services/message.servic","crisi","crisisid","data.topolog","data.topology.nam","decid","detail","detail.component.css","detail.component.html","detail.component.t","detail/topolog","dialog","editnam","export","fals","file","foo","gotocris","hostbind","id","implement","import","info","match","messageservic","metadata","method","navig","ngoninit","null","observ","observable.of(tru","oninit","otherwis","privat","properti","public","relativeto","resolv","result","return","rout","router","rxjs/observ","save","selector","servic","sourc","src/app/topology/components/topolog","string","styleurl","subscribe((data","synchron","templateurl","this.editnam","this.gotocris","this.messageservice.add('discard","this.rout","this.route.data","this.router.navig","this.topolog","this.topology.id","this.topology.nam","topolog","topologydetailcompon","true","unchang","user","void"],"components/TopologyHomeComponent.html":["1","angular/cor","app","class","compon","console.log(\"topologyhomecompon","constructor","export","file","home","home.component.css","home.component.html","home.component.t","home/topolog","implement","import","info","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/topology/components/topolog","styleurl","templateurl","topolog","topologyhomecompon"],"components/TopologyListComponent.html":["2","activatedrout","angular/cor","angular/rout","app","class","compon","console.log(\"topologyhomecompon","constructor","constructor(topologyservic","core/models/topolog","core/services/topology.servic","export","file","implement","import","info","list","list.component.css","list.component.html","list.component.t","list/topolog","match","metadata","ngoninit","number","observ","oninit","parammap","params.get('id","privat","properti","result","return","rout","rxjs/add/operator/switchmap","rxjs/observ","selectedid","selector","sourc","src/app/topology/components/topolog","styleurl","switchmap((param","templateurl","this.route.parammap","this.selectedid","this.topolog","this.topologyservice.gettopolog","topolog","topologylistcompon","topologyservic"],"components/TopologyWorkerComponent.html":["25","5","action","activatedrout","alert(this.topologyjson","allow","angular/common","angular/cor","angular/rout","app","ask","boolean","cancel","candeactiv","center","chang","class","compon","concis","console.log(\"cut","console.log(this.topologyjson","constructor","constructor(rout","content","core/models/topolog","core/services/message.servic","core/services/topology.servic","core/utils/diagram.servic","core/utils/link","core/utils/nod","crisi","crisisid","cut","data.topolog","data.topology.nam","decid","defin","diagram","diagramdiv","diagramservic","dialog","dojob","editnam","elementref","export","fals","file","foo","fromport","give","go","go.diagram","go.graphlinksmodel(nodedataarray","go.graphobject.mak","go.gridlayout","go.margin(5","go.spot.cent","goj","gototolog","graphlinksmodel","graphlinksmodel.linkfromportidproperti","graphlinksmodel.linktoportidproperti","gut","handl","id","implement","import","info","initdata","json.stringify(this.topolog","jsonpip","link","linkdataarray","linktemplateservic","match","messageservic","metadata","method","model","navig","new","ngoninit","node","nodedataarray","nodetemplateservic","null","number","obeect","observ","observable.of(tru","oninit","otherwis","parammap","privat","properti","public","relativeto","resolv","result","return","rout","router","rxjs/observ","save","select","selectedid","selector","servic","set","shape_typ","showt","sourc","src/app/topology/components/topolog","string","styleurl","synchron","templat","template.servic","templateurl","this.diagram","this.diagram.commandhandler.cutselect","this.diagram.initialcontentalign","this.diagram.layout","this.diagram.linktempl","this.diagram.model","this.diagram.nodetempl","this.diagram.pad","this.diagram.undomanager.isen","this.diagramdiv.nativeel","this.editnam","this.initdata","this.linktemplateservice.getlinktempl","this.messageservice.add('discard","this.nodetemplateservice.getnodetemplate_1","this.rout","this.route.data.subscribe((data","this.route.parammap.switchmap((param","this.router.navig","this.topolog","this.topology$.subscribe(topo","this.topology.id","this.topology.linkdataarray","this.topology.nam","this.topology.nodedataarray","this.topologyjson","this.topologyservice.gettopology(params.get('id","this.usingpanel","topo","topolog","topologyjson","topologyservic","topologyworkercompon","toport","true","unchang","up","user","var","viewchild","viewchild('mydiagramdiv","void","worker","worker.component.css","worker.component.html","worker.component.t","worker/topolog","xxxxxxxxxxxxxxxx"],"injectables/CanDeactivateGuard.html":["angular/cor","angular/rout","boolean","cancomponentdeactiv","candeactiv","candeactivate(compon","candeactivateguard","class","component.candeactiv","deactiv","export","file","guard.service.t","implement","import","info","inject","interfac","match","method","observ","promis","result","return","rxjs/observ","sourc","src/app/core/guard/can","true","void"],"injectables/ConfigService.html":["3","angular/common/http","angular/cor","assets/config.json","call","catcherror","catcherror(this.handleerror","class","config","config:config","configservic","configurl","console.info(\"getconfig","constructor","constructor(httpcli","default","error","export","fail","file","getconfig","getconfig_1","getconfig_2","getconfig_3","getconfigrespons","handl","handleerror","handler.servic","http","httpclient","httperrorhandl","httperrorhandler.createhandleerror('configservic","httprespons","import","info","inject","match","method","models/config","now","observ","pipe","privat","properti","request","respons","result","retri","retry(3","return","rxjs/observ","rxjs/oper","service.t","setconfig","sourc","src/app/core/services/config","string","this.config","this.configurl","this.getconfig_2().subscribe(valu","this.handleerror","this.httpclient.get","this.httpclient.get(this.configurl","time","up","valu","value,eooro","void"],"injectables/DiagramService.html":["0","angular/cor","array","class","color","creat","createarraydata","createarraydata(tot","createnodeportarray","createnodeportarray(tot","data","describ","diagram","diagramservic","enabl","enable(nam","enableal","enableall(diagram","export","file","go","go.diagram","goj","import","info","inject","lay","layout","layout(mydiagram","match","method","mydiagram.layout","mydiagram.starttransaction(\"chang","node","nodedataarray","number","number,numbergateway?:numb","numbergateway","ok","privat","randomli","result","return","size","sourc","src/app/core/utils/diagram.service.t","var","void"],"injectables/DummyNodeTemplateProvider.html":["angular/cor","app","async","class","descript","dialog","dialogservic","dummynodetemplateprovid","easier","export","fake","file","go","goj","https://gojs.net/latest/intro/shapes.html","import","info","inject","make","match","modal","node","result","see","servic","service.se","servicedialogservic","shape","sourc","src/app/about/services/dummi","template.provider.t","test"],"injectables/DummyShapeProvider.html":["100","200","3","4","40","6","angular/cor","app","async","background","black","class","club","concis","const","default","defin","descript","dialog","dialogservic","dummyshapeprovid","easier","export","fake","figur","figurenam","file","fill","getallshapebyfigur","getbyusingpanel","getshapebyfigur","getshapebyfigure(figurenam","go","go.graphobject.mak","go.part","go.shap","goj","graphobject","green","height","horizont","https://gojs.net/latest/intro/shapes.html","import","info","inject","lightgreen","make","margin","match","method","modal","mynod","null","orang","part","result","return","see","servic","service.se","servicedialogservic","shape","shapetoreturn","sourc","src/app/about/services/dummy.shape.provider.t","stackpanel","string","stroke","strokewidth","test","var","width","yellow"],"injectables/HttpErrorHandler.html":["alreadi","angular/common/http","angular/cor","app","better","bodi","class","code","const","constructor","constructor(messageservic","constructor(priv","consumpt","creat","createhandleerror","curri","descript","error","error.error","error.error.messag","error.statu","errorev","export","fail","file","function","handl","handleerror","handleerror(servicenam","handler.service.t","httpclient","httperrorhandl","httperrorhandler.createhandleerror","httperrorrespons","import","info","inject","instanceof","job","keep","know","logging.servic","loggingservic","match","messag","message.servic","messageservic","method","name","ob","observ","oper","privat","properti","result","return","run","rxjs/observ","rxjs/observable/of","safe","server","servic","servicenam","sourc","src/app/core/services/http","string","t","this.handleerror(servicenam","this.loggingservice.error(error","this.messageservice.add(`${servicenam","todo","transform","type","user","void"],"injectables/LinkDataService.html":["alpha","angular/cor","app","async","beta","class","data.service.t","descript","dialog","dialogservic","easier","export","fake","file","getlinkdataarray","go","goj","https://gojs.net/latest/intro/shapes.html","import","info","inject","linkdataarray","linkdataservic","make","match","method","modal","result","return","see","servic","service.se","servicedialogservic","shape","sourc","src/app/about/services/link","test","var"],"injectables/LinkTemplateService.html":["2","2f4f4f","4","angular/cor","below","class","color","const","corner","curv","custom","customlink","data.color","data.thick","defin","export","file","fill","getlinktempl","getlinktemplate_1","go","go.binding(\"points\").maketwoway","go.binding(\"strok","go.binding(\"strokewidth","go.graphobject.mak","go.link","go.link.avoidsnod","go.link.jumpgap","go.shap","goj","import","info","inject","link","linktempl","linktemplateservic","match","method","new","null","opentriangl","orthogon","public","relink","relinkablefrom","relinkableto","resegment","reshap","result","return","rout","shape.strok","shape.strokewidth","sourc","src/app/core/utils/link","stroke","strokewidth","templat","template.service.t","thick","toarrow","true","var","void"],"injectables/LoggingService.html":["angular/cor","class","clear","consol","console.error(error","error","error(error","export","file","import","info","inject","log","loggingservic","match","method","properti","result","return","sourc","src/app/core/services/logging.service.t","string","this.log","this.logs.push(error","void"],"injectables/MessageService.html":["add","add(messag","angular/cor","class","clear","export","file","import","info","inject","match","messag","messageservic","method","properti","result","return","sourc","src/app/core/services/message.service.t","string","this.messag","this.messages.push(messag","void"],"injectables/NodeDataService.html":["alpha","angular/cor","app","async","beta","class","data.service.t","descript","dialog","dialogservic","easier","export","fake","file","getnodedataarray","go","goj","https://gojs.net/latest/intro/shapes.html","import","info","inject","key","make","match","method","modal","nodedataarray","nodedataservic","result","return","see","servic","service.se","servicedialogservic","shape","sourc","src/app/about/services/nod","test","var"],"injectables/NodeTemplateService.html":["0","0,0","1","1,4","10","100","14px","15","150","2","20","369","4","5","5,0","50","65","70","8","_side","action","al","allow","angular/cor","appear","auto","b","background","bar(button","between","bind","black","bodi","bother","bottom","bottomarray","bound","center","chang","class","click","cloud","collaps","color","column","concis","const","contain","context","contextmenu","contextmenubutton","creat","cursor","d","dash","data.bottomarray","data.color","data.key","data.leftarray","data.rightarray","data.toparray","defaultalign","defin","desireds","devices","don't","e","e.g","each","easier","edit","element","ellips","end","expand","export","f1","fals","file","fill","font","fromlink","fromspot","function","gayway","geometrystr","getnodetemplate_1","getnodetemplate_11","getnodetemplate_2","getnodetemplate_3","getnodetemplate_4","getupportmenu","go","go.adorn","go.binding(\"fil","go.binding(\"itemarray","go.binding(\"loc","go.binding(\"portid","go.binding(\"sourc","go.binding(\"text","go.binding(\"vis","go.graphobject.fil","go.graphobject.mak","go.margin(0","go.margin(1","go.nod","go.panel","go.pictur","go.point.parse).maketwoway(go.point.stringifi","go.rowcolumndefinit","go.shap","go.size(15","go.size(150","go.size(156","go.size(2","go.size(200","go.size(8","go.spot(0","go.spot(1","go.spot.bottom","go.spot.cent","go.spot.left","go.spot.right","go.spot.top","go.textblock","goj","graphobject.vis","gray","green","hast","height","hexagon","hold","horizont","imag","images","img","import","includ","indic","info","inject","insid","intern","isaction","it'","item","itemarray","itemtempl","keep","key","l","left","leftarray","leftsid","lightgray","loc","locationobjectnam","locationspot","m","make","makebutton","makebutton(text","makeitemtempl","makeitemtemplate(leftsid","margin","match","mayb","menu","method","minsiz","more","name","name\").maketwoway","new","node","nodemenu","nodetempl","nodetemplateservic","null","o","o.diagram","obj","ofobject","oldskip","order","panel","pic","picture,nam","place","pointer","port","portcolor","portid","portmenu","portsiz","predic","privat","procedur","properti","record","rectangl","relat","result","return","right","rightarray","roundedrectangl","row","sego","select","selectedbrush","selectionobjectnam","serif","shape","shape.diagram.skipsundomanag","shape.fil","shape_typ","side","simpl","sophist","sourc","space","spot1","spot2","src/app/core/utils/nod","stretch","string","stroke","strokewidth","tabl","tb","tb.panel.findobject(\"shap","tell","templat","template.service.t","text","textalign","textblock.text","themselv","there'","this.changecolor(obj.part.adornedobject","this.getupportmenu","this.makebutton(\"chang","this.makebutton(\"swap","this.swaporder(obj.part.adornedobject","titl","toggl","tolink","top","toparray","toreturn","tospot","treeexpanderbutton","true","type","ui,san","unselectedbrush","us","user","var","vertic","visibl","visiblepred","visiblepredicate(o","void","whether","white","width","yellow","z"],"injectables/OutputService.html":["angular/cor","class","constructor","constructor(messageservic","core/services/http","core/services/logging.servic","core/services/message.servic","error","export","file","getal","handleerror","handler.servic","httperrorhandl","httperrorhandler.createhandleerror('configservic","import","info","infos.push(inn","infos:str","inject","loggingservic","match","messageservic","method","outputservic","privat","properti","result","return","sourc","src/app/output/services/output.service.t","this.handleerror","this.loggingservice.logs.foreach(inn","this.messageservice.messages.foreach(inn","void"],"injectables/TopologyDetailResolver.html":["activatedroutesnapshot","angular/cor","angular/rout","center","class","constructor","constructor(c","constructor(priv","core/models/topolog","core/services/topology.servic","cs","detail","export","file","found","id","implement","import","info","inject","match","method","null","observ","privat","resolv","resolve(rout","resolver.service.t","result","return","route.parammap.get('id","router","routerstatesnapshot","rxjs/add/operator/map","rxjs/add/operator/tak","rxjs/observ","sourc","src/app/topology/services/topolog","state","this.cs.gettopology(id).take(1).map(topo","this.router.navigate(['/crisi","topo","topolog","topologydetailresolv","topologyservic"],"injectables/TopologyService.html":["0","1","100","2","74512","additin","addtopolog","addtopology(nam","again","angular/common/http","angular/cor","array","assets/images/cfix.png","assets/images/nettap.png","assets/images/netx51.png","befor","behaviorsubject","behaviorsubject(topolog","bottomarray","bs","call","catcherror","chang","class","clear","configservic","const","constructor","constructor(httpcli","core/models/bs/topolog","core/models/topolog","core/services/config","core/services/http","creat","createlinkdata","createlinkdata(link","createnodedata","createnodedata(devic","createtopo","createtopo(topoitem","data","default","element","error","export","file","fill","find","gettopolog","gettopology(id","handleerror","handler.servic","httpclient","httperrorhandl","httperrorhandler.createhandleerror('todoservic","id","idevic","ii.topologyurl","ilink","import","index","info","inital","initi","inject","item","itopologyitem","link","link.from","link.fromport","link.to","link.toport","linkdata","linkdata.from","linkdata.fromport","linkdata.linkcolor","linkdata.to","linkdata.toport","linkdataarray","map(topo","match","method","models/bs/idevic","models/bs/ilink","new","nextcrisisid","nodedata","nodedata.bottomarray","nodedata.img","nodedata.typ","nodedataarray","number","obarray","obarray.subscribe(topoarray","observ","observable.of(topolog","out","pipe(catcherror(this.handleerror('inital","port","privat","properti","ps","result","return","rxjs/add/observable/of","rxjs/add/operator/map","rxjs/behaviorsubject","rxjs/observ","rxjs/oper","servic","setimag","setimage(nodedata","sourc","src/app/core/services/topology.service.t","static","strategi","string","this.configservice.getconfig_2().subscribe(ii","this.createlinkdata(link","this.createnodedata(devic","this.gettopolog","this.handleerror","this.httpclient.get(this.topologyurl","this.inital","this.topologyurl","todo","topo","topo.id","topoitem.link","topoitem.links.foreach(link","topolog","topologies.length","topologies.splice(0","topology.linkdataarray","topology.linkdataarray.push(linkdata","topology.nodedataarray.push(nodedata","topologyitem","topologyservic","topologyurl","topos.find(topo","turn","undefin","valu","var","void"],"injectables/TopologyWorkerResolver.html":["activatedroutesnapshot","angular/cor","angular/rout","center","class","constructor","constructor(priv","constructor(topologyservic","core/models/topolog","core/services/topology.servic","export","file","found","id","implement","import","info","inject","match","method","null","observ","privat","resolv","resolve(rout","resolver.service.t","result","return","route.parammap.get('id","router","routerstatesnapshot","rxjs/add/operator/map","rxjs/add/operator/tak","rxjs/observ","sourc","src/app/topology/services/topolog","state","this.router.navigate(['/crisi","this.topologyservice.gettopology(id).take(1).map(topo","topo","topolog","topologyservic","topologyworkerresolv","worker"],"routes.html":["aboutdescriptioncompon","app","appabout","compon","full","home","homecompon","match","output","outputcompon","path","pathmatch","redirectto","result","rout","topolog","topologyhomecompon"],"classes/Address.html":["address","address1","address2","alternative_phon","citi","class","compani","country_id","export","file","firstnam","full_nam","id","info","lastnam","match","phone","properti","result","sourc","src/app/core/models/address.t","state_id","state_nam","state_text","string","zipcod"],"classes/AppPage.html":["apppag","browser","browser.get","class","e2e/app.po.t","element","element(by.css('app","export","file","getparagraphtext","h1')).gettext","import","info","match","method","navigateto","protractor","result","return","root","sourc","void"],"classes/BottomArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor","constructor(portcolor","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"classes/CustomLink.html":["0","2","20","arr","arr.length","array","boolean","bottom","c","class","computecurvi","computeendsegmentlength","computeendsegmentlength(nod","constructor","count","customlink","export","extend","fals","file","findsideportindexandcount","fromport","frompt.i","frompt.x","fromseglen","fromspot","fromspot.equals(go.spot.bottom","fromspot.equals(go.spot.left","fromspot.equals(go.spot.right","fromspot.equals(go.spot.top","function","go","go.link","go.link.orthogon","goj","hascurvi","idx","import","info","info[0","info[1","len","link.t","match","math.abs(frompt.i","math.abs(thispt.i","method","node","node.data","nodedata","nodedata[sid","null","number","otherpt.i","otherpt.x","port","port._sid","port.data","portdata","properti","result","return","side","sourc","spot","src/app/core/utils/custom","super","super.computecurviness.call(thi","this.computeendsegmentlength(fromnod","this.computeendsegmentlength(tonod","this.findsideportindexandcount(nod","this.rout","top","toport","topt.i","topt.x","toseglen","tospot","tospot.equals(go.spot.bottom","tospot.equals(go.spot.left","tospot.equals(go.spot.right","tospot.equals(go.spot.top","true","var"],"classes/LinkDataArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor","constructor(portcolor","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"classes/NodeDataArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor","constructor(portcolor","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"classes/Port.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor","constructor(portcolor","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"classes/Todo.html":["boolean","class","export","file","id","info","iscomplet","match","name","number","properti","result","sourc","src/app/core/models/todo.t","string","todo"],"classes/Topology.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor","constructor(portcolor","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"classes/TopologyItem.html":["class","descript","devic","export","file","id","idevic","ilink","implement","import","info","interfac","item.t","itopologyitem","link","match","name","number","numberdevic","properti","protocol","result","sourc","src/app/core/models/bs/topolog","string","topologyitem"],"interfaces/CanComponentDeactivate.html":["angular/cor","angular/rout","boolean","cancomponentdeactiv","candeactiv","candeactivate(compon","candeactivateguard","class","component.candeactiv","deactiv","export","file","guard.service.t","implement","import","info","inject","interfac","match","observ","promis","properti","result","return","rxjs/observ","sourc","src/app/core/guard/can","true","type"],"interfaces/Config.html":["config","export","file","homeurl","info","interfac","match","properti","result","sourc","src/app/core/models/config.t","string","todourl","topologyurl","type"],"interfaces/IBottomArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"interfaces/IDevice.html":["dtminfo","export","file","id","idevic","img","import","info","interfac","iport","key","loc","match","name","port","properti","result","sourc","src/app/core/models/bs/idevice.t","state","string","supportprotocol","type","vendor","version"],"interfaces/ILink.html":["export","file","fromport","id","ilink","info","interfac","match","properti","result","sourc","src/app/core/models/bs/ilink.t","standart","string","toport","type"],"interfaces/IPort.html":["export","file","fromid","info","interfac","iport","match","portcolor","portid","properti","result","sourc","src/app/core/models/bs/iport.t","string","toid","type"],"interfaces/ITopology.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"interfaces/ITopologyItem.html":["class","descript","devic","export","file","id","idevic","ilink","implement","import","info","interfac","item.t","itopologyitem","link","match","name","number","numberdevic","properti","protocol","result","sourc","src/app/core/models/bs/topolog","string","topologyitem","type"],"interfaces/LeftArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"interfaces/RightArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"interfaces/TopArray.html":["addit","boolean","bottomarray","bs/idevic","bs/ilink","bs/iport","bs/topolog","class","constructor(publ","copiesarray","copiesarrayobject","descript","devic","dtminfo","export","file","fromport","ibottomarray","id","idevic","ilink","img","implement","import","info","interfac","iport","item","itopolog","itopologyitem","key","leftarray","link","linkcolor","linkdataarray","linkfromportidproperti","linktoportidproperti","loc","match","name","nodedataarray","number","numberdevic","port","portcolor","portid","properti","protocol","public","result","rightarray","sourc","src/app/core/models/topology.t","state","string","supportprotocol","this.class","this.id","this.portcolor","this.portid","toparray","topolog","toport","type","vendor","version"],"miscellaneous.html":["context","environ","match","miscellan","requir","result","shape_typ","string","topolog","variabl"],"coverage.html":["0","0/0","0/1","0/12","0/15","0/2","0/3","0/4","0/5","0/6","0/7","0/9","1/16","1/2","1/8","100","12","13","2/2","3/8","37","50","6","aboutdescriptioncompon","address","appcompon","apppag","bottomarray","cancomponentdeactiv","candeactivateguard","class","compon","config","configservic","coverag","customlink","data.service.t","deactiv","description.component.t","detail","detail.component.t","detail/topolog","diagramservic","document","dummynodetemplateprovid","dummyshapeprovid","e2e/app.po.t","error","file","footer.component.t","guard.service.t","handler.service.t","header.component.t","home.component.t","home/topolog","homecompon","homedescriptioncompon","httperrorhandl","ibottomarray","identifi","idevic","ilink","inject","interfac","iport","item.t","itopolog","itopologyitem","layoutfootercompon","layoutheadercompon","layoutmaincompon","layoutnavicompon","leftarray","link.t","linkdataarray","linkdataservic","linktemplateservic","list.component.t","list/topolog","loggingservic","main.component.t","match","messageservic","navi.component.t","node","nodedataarray","nodedataservic","nodetemplateservic","outputcompon","outputservic","port","project","resolver.service.t","result","rightarray","service.t","src/app/about/components/about","src/app/about/services/dummi","src/app/about/services/dummy.shape.provider.t","src/app/about/services/link","src/app/about/services/nod","src/app/app.component.t","src/app/core/guard/can","src/app/core/models/address.t","src/app/core/models/bs/idevice.t","src/app/core/models/bs/ilink.t","src/app/core/models/bs/iport.t","src/app/core/models/bs/topolog","src/app/core/models/config.t","src/app/core/models/todo.t","src/app/core/models/topology.t","src/app/core/services/config","src/app/core/services/http","src/app/core/services/logging.service.t","src/app/core/services/message.service.t","src/app/core/services/topology.service.t","src/app/core/utils/custom","src/app/core/utils/diagram.service.t","src/app/core/utils/link","src/app/core/utils/nod","src/app/home/components/description/hom","src/app/home/components/home.component.t","src/app/layout/components/footer/layout","src/app/layout/components/header/layout","src/app/layout/components/main/layout","src/app/layout/components/navi/layout","src/app/output/output.component.t","src/app/output/services/output.service.t","src/app/topology/components/topolog","src/app/topology/services/topolog","statement","template.provider.t","template.service.t","todo","toparray","topolog","topologydetailcompon","topologydetailresolv","topologyhomecompon","topologyitem","topologylistcompon","topologyservic","topologyworkercompon","topologyworkerresolv","type","worker","worker.component.t","worker/topolog"]},"length":68},"tokenStore":{"root":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.020446096654275093},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"coverage.html":{"ref":"coverage.html","tf":0.13513513513513514}},".":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}},",":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"1":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.04054054054054054}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.030405405405405407}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02027027027027027}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010135135135135136}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{}}},"1":{"0":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"coverage.html":{"ref":"coverage.html","tf":0.016891891891891893}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"4":{"docs":{},"p":{"docs":{},"x":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"5":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}},"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.023234200743494422},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},".":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"7":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}},"docs":{}}},"docs":{}},",":{"4":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"docs":{}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{}}},"2":{"0":{"0":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.02631578947368421}}},"5":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}},"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}},"f":{"4":{"docs":{},"f":{"4":{"docs":{},"f":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}},"docs":{}}},"docs":{}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.016891891891891893}}},"docs":{}}},"3":{"0":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}},"6":{"9":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"docs":{}}},"4":{"0":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.07389162561576355}}},"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.034482758620689655},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"5":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}},"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}},",":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"docs":{}}},"6":{"5":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"7":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"4":{"5":{"1":{"2":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}},"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.03125}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}},"r":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07017543859649122},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"routes.html":{"ref":"routes.html","tf":0.08695652173913043}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.023255813953488}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":5.045454545454546}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"routes.html":{"ref":"routes.html","tf":0.08695652173913043}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.05813953488372093},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.035087719298246},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.0588235294117645},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}}},"r":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"a":{"docs":{},"y":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":5.028985507246377},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":5.03030303030303}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":5.007604562737643},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05263157894736842}}}}}}}}},"i":{"docs":{},"t":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"i":{"docs":{},"n":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"1":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}},"2":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}},"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.03260869565217391},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.03896103896103896},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.03896103896103896}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}}}}},"s":{"docs":{},"k":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}},"x":{"5":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}},"b":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.052083333333333336}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.18461538461538463}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.18461538461538463},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.020618556701030927},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.020618556701030927},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.020618556701030927},"classes/Port.html":{"ref":"classes/Port.html","tf":0.020618556701030927},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.06896551724137931},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.020618556701030927},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.03669724770642202},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627}}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0055762081784386614},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":5.020618556701031},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.015463917525773196},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.015463917525773196},"classes/Port.html":{"ref":"classes/Port.html","tf":0.015463917525773196},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.015463917525773196},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.015544041450777202},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.013761467889908258},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.015544041450777202},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.015544041450777202},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.015544041450777202},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"d":{"docs":{},"i":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.00929368029739777}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}},"a":{"docs":{"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"s":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"/":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}}}}}}},"c":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.02631578947368421}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}}}}}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.03125}},"c":{"docs":{},"k":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/Address.html":{"ref":"classes/Address.html","tf":5.022471910112359},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.0588235294117645},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":5.041237113402062},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":5.0131578947368425},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":5.041237113402062},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":5.041237113402062},"classes/Port.html":{"ref":"classes/Port.html","tf":5.041237113402062},"classes/Todo.html":{"ref":"classes/Todo.html","tf":5.068965517241379},"classes/Topology.html":{"ref":"classes/Topology.html","tf":5.041237113402062},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":5.026666666666666},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.03626943005181347},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.04128440366972477},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.03626943005181347},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.03626943005181347},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.03626943005181347},"coverage.html":{"ref":"coverage.html","tf":0.033783783783783786}}}}},"u":{"docs":{},"b":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.034482758620689655}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.07692307692307693},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.07894736842105263},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.03125},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.037037037037037035},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":5.011406844106464},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.052631578947368},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":5.054545454545455},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":5.0625},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":5.0576923076923075},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":5.0576923076923075},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":5.0576923076923075},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":5.0576923076923075},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":5.055555555555555},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":5.0182926829268295},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":5.061224489795919},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":5.032608695652174},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":5.009174311926605},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.04391891891891892}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.042105263157894736},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.037037037037037035}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.031746031746032},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.05555555555555555}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.008364312267657992},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.0625},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.061224489795918366},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.019736842105263157},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732}},"(":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}},"c":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232}},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}},"\"":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.03424657534246575},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.047619047619047616},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07017543859649122},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":5.013698630136986},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01858736059479554},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945}}}}}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}},"x":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.011152416356877323}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.003378378378379}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.08695652173913043},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.11363636363636363}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.027777777777777776},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":5.043478260869565},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.06521739130434782},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":5.068181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}},"r":{"docs":{},"i":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613}}}},"v":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":5.0131578947368425},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0055762081784386614},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.01935483870967742}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"e":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}},"i":{"docs":{},"c":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"e":{"docs":{},"s":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368}}}}},"i":{"docs":{},"d":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"c":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}},"t":{"docs":{"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664}}}}}},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}},"b":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.011152416356877323}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513}}}}}},"t":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.015209125475285171},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":5.028985507246377},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"e":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.015209125475285171},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":5.04},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.019011406844106463},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":5.009852216748769},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}},"o":{"docs":{},"j":{"docs":{},"o":{"docs":{},"b":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.041666666666666664},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.01486988847583643}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.21052631578947367}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.043478260869565216},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.05154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.05154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.05154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.05154639175257732},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.05154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.02666666666666667},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.05181347150259067},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.02247191011235955},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.05181347150259067},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.05181347150259067},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.05181347150259067}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.04516129032258064},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}},".":{"docs":{},"g":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"f":{"1":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.04433497536945813},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.034482758620689655}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.019736842105263157}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"routes.html":{"ref":"routes.html","tf":0.043478260869565216}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.01935483870967742},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}}}}}},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368}}}}}}}}}},"o":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464}}}}}},"t":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"g":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.039473684210526314}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.057692307692307696},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}},"x":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.07142857142857142}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}},"i":{"docs":{},"l":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}},"k":{"docs":{},"e":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.041666666666666664}}}}},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0273972602739726}},"_":{"1":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945}}},"2":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945}}},"3":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0273972602739726}}},"docs":{}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.043478260869565216}},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.014778325123152709}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.014778325123152709}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.05}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515}}},"docs":{}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.04838709677419355}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"1":{"1":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"2":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"3":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"4":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"docs":{}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.08823529411764706}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.014778325123152709},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0055762081784386614}}},"1":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}},"5":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}},"docs":{}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.015209125475285171},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.022304832713754646}}}}},"r":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.019704433497536946}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"g":{"docs":{},"o":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.015209125475285171},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.04433497536945813},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.012081784386617101}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"5":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"6":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}},"docs":{}},"2":{"0":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"docs":{}},"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"3":{"0":{"0":{"docs":{},",":{"1":{"4":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"8":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{}}}}},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}},"(":{"0":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"1":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.008364312267657992}},",":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},":":{"2":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}},"j":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}},"o":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267}}}}}},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}}}}}},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.029556650246305417},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}},"a":{"docs":{},"y":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}},"h":{"1":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}}}}}}}},"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.03125}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464}}}}}},"t":{"docs":{"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.03940886699507389},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0273972602739726},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.047619047619047616},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.03424657534246575},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":5.012903225806451},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.07246376811594203},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01858736059479554},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.025806451612903226}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.045454545454545456},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.04918032786885246},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.125},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"routes.html":{"ref":"routes.html","tf":0.13043478260869565}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":5.040816326530612}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.061224489795918366},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":5.032786885245901}}}}}}}}}}}}}},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.061224489795918366},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":5.036363636363636},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.061224489795918366},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":5.041666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224}}}}}},"t":{"docs":{"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.08571428571428572}}}}}}},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}}}},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756}}}}}}}},"l":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0410958904109589},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03870967741935484},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.08695652173913043},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.022304832713754646}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}},"i":{"docs":{},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":5.065217391304348},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":5.02054794520548},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":5.043478260869565},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":5.06},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":5.014778325123153},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":5.019354838709678},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":5.05},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":5.027522935779817},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":5.076923076923077},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":5.078947368421052},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":5.048387096774194},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":5.00278810408922},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":5.043478260869565},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":5.038961038961039},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":5.011152416356877},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":5.038961038961039},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456},"coverage.html":{"ref":"coverage.html","tf":0.05405405405405406}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.02577319587628866},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.02577319587628866},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.02577319587628866},"classes/Port.html":{"ref":"classes/Port.html","tf":0.02577319587628866},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.02577319587628866},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":5.045454545454546},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":5.057142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":5.0310880829015545},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":5.01980198019802},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":5.038461538461538},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":5.0476190476190474},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":5.027522935779817},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":5.022471910112359},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":5.0310880829015545},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":5.0310880829015545},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":5.0310880829015545},"coverage.html":{"ref":"coverage.html","tf":0.037162162162162164}}}}},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}},"[":{"0":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}},"1":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}},"docs":{}}}},"i":{"docs":{},"t":{"docs":{"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232}},"i":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.14492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.07575757575757576},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.16279069767441862},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.09090909090909091},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.14285714285714285},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.14285714285714285},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.09836065573770492},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.11594202898550725},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.14814814814814814},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.10638297872340426},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.14736842105263157},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.09259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.030418250950570342},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.057692307692307696},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.057692307692307696},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.057692307692307696},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.057692307692307696},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.03048780487804878},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.06521739130434782},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.03363914373088685},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.06521739130434782},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0410958904109589},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.06},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.014778325123152709},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03870967741935484},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.05},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.04838709677419355},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.057971014492753624},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.09090909090909091},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.048327137546468404},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.09090909090909091},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.020618556701030927},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.020618556701030927},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.020618556701030927},"classes/Port.html":{"ref":"classes/Port.html","tf":0.020618556701030927},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.020618556701030927},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.02666666666666667},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.06818181818181818},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.02247191011235955},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.020618556701030927},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.020618556701030927},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.020618556701030927},"classes/Port.html":{"ref":"classes/Port.html","tf":0.020618556701030927},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.020618556701030927},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627}}}}}}}}},"a":{"docs":{},"g":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"e":{"docs":{},"s":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}},"g":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}},"d":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976},"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.020618556701030927},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.020618556701030927},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.020618556701030927},"classes/Port.html":{"ref":"classes/Port.html","tf":0.020618556701030927},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.10344827586206896},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.020618556701030927},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.057692307692307696},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.015463917525773196},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.015463917525773196},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.015463917525773196},"classes/Port.html":{"ref":"classes/Port.html","tf":0.015463917525773196},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.015463917525773196},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.06666666666666667},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.015544041450777202},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":5.01980198019802},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.013761467889908258},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.06741573033707865},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.015544041450777202},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.015544041450777202},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.015544041450777202},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"x":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.008364312267657992},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.013011152416356878}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439}}}}}}},".":{"docs":{},"t":{"docs":{"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}},"'":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":5.013761467889908},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"y":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.02666666666666667},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":5.033707865168539},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.10344827586206896}}}}}}}}}},"i":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.015463917525773196},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.015463917525773196},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.015463917525773196},"classes/Port.html":{"ref":"classes/Port.html","tf":0.015463917525773196},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.015463917525773196},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.06666666666666667},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.015544041450777202},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":5.038461538461538},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.013761467889908258},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.06741573033707865},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.015544041450777202},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.015544041450777202},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.015544041450777202},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":5.015544041450777},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.04950495049504951},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":5.0476190476190474},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}},"y":{"docs":{"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613}}}}}},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules.html":{"ref":"modules.html","tf":0.03076923076923077},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05263157894736842},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976},"routes.html":{"ref":"routes.html","tf":0.08695652173913043},"classes/Address.html":{"ref":"classes/Address.html","tf":0.02247191011235955},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.06896551724137931},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.02666666666666667},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.05714285714285714},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.019801980198019802},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.038461538461538464},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.047619047619047616},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.02247191011235955},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464}}}}}},"t":{"docs":{"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.034482758620689655},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.011152416356877323}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"b":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":10.015384615384615},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":5.0144927536231885},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":5.015151515151516},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.011627906976744},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":5.0227272727272725},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.015873015873016},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":5.020408163265306},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":5.016393442622951},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":5.0144927536231885},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":5.018518518518518},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":5.0212765957446805},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":5.010526315789473},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":5.0092592592592595}}}},"e":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}}}}}},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.07894736842105263}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.047619047619047616},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.04878048780487805},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.024464831804281346},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.025806451612903226},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":5.052631578947368},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.057971014492753624},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.052631578947368}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.00929368029739777},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.020618556701030927},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.020618556701030927},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.020618556701030927},"classes/Port.html":{"ref":"classes/Port.html","tf":0.020618556701030927},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.10344827586206896},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.020618556701030927},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.08823529411764706}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464}}}}}},"t":{"docs":{"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.034220532319391636},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.045871559633027525},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.05390334572490706},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643}}},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.07291666666666667}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.019011406844106463},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":5.032258064516129},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"=":{"docs":{},"[":{"docs":{},"{":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.02577319587628866},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.02577319587628866},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":5.030927835051546},"classes/Port.html":{"ref":"classes/Port.html","tf":0.02577319587628866},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.02577319587628866},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.025906735751295335},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.04128440366972477},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.025906735751295335},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.025906735751295335},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.025906735751295335},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":5.0018587360594795},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}},"w":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}},"r":{"1":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}},"\"":{"docs":{},",":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}},"docs":{},".":{"1":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"2":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.019704433497536946},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.013011152416356878},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.043478260869565216},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.06896551724137931},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.08},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0898876404494382},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"?":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}}}}}}}},"o":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"routes.html":{"ref":"routes.html","tf":0.043478260869565216}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":5.037037037037037}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.05555555555555555},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":5.042553191489362}}}}}}}}}}}}}},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.05555555555555555},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":5.037037037037037},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.07407407407407407},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":5.028985507246377},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.05555555555555555}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.041666666666666}}}}}}}}},"b":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.024390243902439025},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.03260869565217391},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01834862385321101},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.03424657534246575},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.01935483870967742},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.03896103896103896},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.03896103896103896},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}},"j":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}},"x":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}},"k":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.05806451612903226}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.038461538461538464},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.026615969581749048},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.024464831804281346},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0273972602739726},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.07246376811594203},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.05204460966542751},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.037037037037037035},"routes.html":{"ref":"routes.html","tf":0.043478260869565216}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"routes.html":{"ref":"routes.html","tf":0.043478260869565216}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}}}}}}}}}}}}},"t":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.019516728624535316}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},":":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}}},"r":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.015799256505576207},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.02631578947368421},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":5.015463917525773},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.04639175257731959},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.04639175257731959},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.04639175257731959},"classes/Port.html":{"ref":"classes/Port.html","tf":0.04639175257731959},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.04639175257731959},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.046632124352331605},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.07142857142857142},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.03211009174311927},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.046632124352331605},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.046632124352331605},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.046632124352331605}}}}}}},"i":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.05154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.05154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.05154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.05154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.05154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.046632124352331605},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.07142857142857142},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.03211009174311927},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.046632124352331605},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.046632124352331605},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.046632124352331605}},":":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"\"":{"docs":{},"#":{"7":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"s":{"docs":{},":":{"docs":{},"[":{"docs":{},"{":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"\"":{"docs":{},"#":{"docs":{},"c":{"2":{"5":{"docs":{},"c":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}},"docs":{}},"docs":{}},"f":{"1":{"2":{"3":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.011152416356877323}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.019736842105263157}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}}},"s":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5.010416666666667}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}},"a":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules.html":{"ref":"modules.html","tf":0.03076923076923077},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.06451612903225806},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05263157894736842},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976},"routes.html":{"ref":"routes.html","tf":0.08695652173913043},"classes/Address.html":{"ref":"classes/Address.html","tf":0.02247191011235955},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.06896551724137931},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.02666666666666667},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.045454545454545456},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.05714285714285714},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.019801980198019802},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.038461538461538464},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.047619047619047616},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.009174311926605505},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.02247191011235955},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.03896103896103896},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.03896103896103896}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}},"t":{"docs":{},"o":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"routes.html":{"ref":"routes.html","tf":0.043478260869565216}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}}}}}}}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.042682926829268296},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.03363914373088685},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.043478260869565216},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0821917808219178},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.07246376811594203},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.029556650246305417},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03870967741935484},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.03669724770642202},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05263157894736842},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.016728624535315983},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.028985507246376812},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.05194805194805195},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.04460966542750929},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.05194805194805195},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.11764705882352941},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.039473684210526314},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}}},"r":{"docs":{},"i":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}}},"y":{"docs":{},"(":{"3":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}},"docs":{}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}},"i":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.07291666666666667},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.07575757575757576},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.06557377049180328},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"routes.html":{"ref":"routes.html","tf":10.043478260869565}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.03048780487804878},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.06493506493506493},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.06493506493506493}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"{":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.03896103896103896},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.03896103896103896}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.013940520446096654}},":":{"0":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"1":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":5.010362694300518},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"s":{"docs":{},"e":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.01935483870967742}}}}}}}}},"i":{"docs":{},"f":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0055762081784386614}},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.03260869565217391},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.02054794520547945}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}}}}}}}}}}}}},"e":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516}}},"g":{"docs":{},"o":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.029411764705882353},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666}}}}},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.024630541871921183},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.011152416356877323}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.008364312267657992}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01834862385321101},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03225806451612903},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.10526315789473684},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.022304832713754646},"classes/Address.html":{"ref":"classes/Address.html","tf":0.33707865168539325},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.2268041237113402},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.2268041237113402},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.2268041237113402},"classes/Port.html":{"ref":"classes/Port.html","tf":0.2268041237113402},"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.06896551724137931},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.2268041237113402},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.12},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.2571428571428571},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.22797927461139897},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.32673267326732675},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.34615384615384615},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.2857142857142857},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.21100917431192662},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.1348314606741573},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.22797927461139897},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.22797927461139897},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.22797927461139897},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05263157894736842}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}}}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.18461538461538463},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756}}}}}}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.18461538461538463},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.015151515151515152}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.022727272727272728}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.015873015873015872}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676},"coverage.html":{"ref":"coverage.html","tf":0.033783783783783786}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Todo.html":{"ref":"classes/Todo.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.013333333333333334},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.009900990099009901},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.023809523809523808},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.01639344262295082}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.02040816326530612}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.02127659574468085}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.018518518518518517}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.02040816326530612},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"coverage.html":{"ref":"coverage.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"h":{"docs":{},"e":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}},"c":{"docs":{},"e":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"o":{"docs":{},"t":{"1":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"2":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}},"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}},"f":{"docs":{},"e":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.014778325123152709},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}}}},"d":{"docs":{},"e":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"t":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03225806451612903}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.052083333333333336},"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.04},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.009852216748768473},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.03225806451612903}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.012232415902140673},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.014492753623188406},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DummyNodeTemplateProvider.html":{"ref":"injectables/DummyNodeTemplateProvider.html","tf":0.02},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"coverage.html":{"ref":"coverage.html","tf":0.006756756756756757}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03508771929824561},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03636363636363636},"components/HomeDescriptionComponent.html":{"ref":"components/HomeDescriptionComponent.html","tf":0.041666666666666664},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.038461538461538464},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.038461538461538464},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.038461538461538464},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.038461538461538464},"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.037037037037037035},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.04081632653061224},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"o":{"docs":{},"p":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"o":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.025974025974025976},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.025974025974025976}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.027777777777777776},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.08536585365853659},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":0.12244897959183673},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.10869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.05198776758409786},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.022304832713754646},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":5.010309278350515},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.10526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":5.021052631578947}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":5.018518518518518}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.047619047619047616},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.043478260869565216},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.03896103896103896},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":5.007434944237918},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.05194805194805195},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":5.012195121951219},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.027777777777777776},"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":5.025974025974026},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyHomeComponent.html":{"ref":"components/TopologyHomeComponent.html","tf":5.040816326530612},"routes.html":{"ref":"routes.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":5.021739130434782},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.031578947368421054},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":5.00611620795107},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.027777777777777776},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":5.025974025974026},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.05454545454545454},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.08571428571428572}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.009174311926605505}}}}}},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":5.026666666666666},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}},"docs":{}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}}}}},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.057692307692307696},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":5.010362694300518},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"t":{"docs":{},".":{"docs":{},"i":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.019736842105263157}}},"x":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}},"o":{"docs":{},"l":{"docs":{},":":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"g":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.039473684210526314}}}}}}}},"d":{"docs":{},"o":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/Todo.html":{"ref":"classes/Todo.html","tf":5.068965517241379},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.08571428571428572}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505}}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.07142857142857142}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.008364312267657992}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},":":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"s":{"docs":{},"_":{"1":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818}}}}}},"i":{"docs":{},"i":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584}},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/OutputComponent.html":{"ref":"components/OutputComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"_":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}},".":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"'":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{"injectables/TopologyDetailResolver.html":{"ref":"injectables/TopologyDetailResolver.html","tf":0.012987012987012988},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}},"a":{"docs":{},"l":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.007434944237918215}}}}}}},"d":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0273972602739726}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.01834862385321101}}}}},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}}}},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.012232415902140673},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.03669724770642202},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.017657992565055763},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.013157894736842105},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05263157894736842},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}},"m":{"docs":{},"e":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.012903225806451613},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/CanComponentDeactivate.html":{"ref":"interfaces/CanComponentDeactivate.html","tf":0.022727272727272728},"interfaces/Config.html":{"ref":"interfaces/Config.html","tf":0.08571428571428572},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.02072538860103627},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.1485148514851485},"interfaces/ILink.html":{"ref":"interfaces/ILink.html","tf":0.17307692307692307},"interfaces/IPort.html":{"ref":"interfaces/IPort.html","tf":0.09523809523809523},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.04128440366972477},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.07865168539325842},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.02072538860103627},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.02072538860103627},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.02072538860103627},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}},"b":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.006097560975609756},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0037174721189591076}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.03125},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879}},"s":{"docs":{},"_":{"1":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.011406844106463879}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.012195121951219513},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}},"p":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}},"i":{"docs":{},",":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.010416666666666666},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.007434944237918215}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.020833333333333332}}},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"y":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0076045627376425855}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.034220532319391636},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.043478260869565216},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.024630541871921183},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.016666666666666666},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/NodeDataService.html":{"ref":"injectables/NodeDataService.html","tf":0.016129032258064516},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.023234200743494422},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.09868421052631579}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05263157894736842}}}}}}},"l":{"docs":{},"u":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.017543859649122806},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.0136986301369863},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.01818181818181818}}}}}}}}}}}}}},",":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.00684931506849315}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.015209125475285171},"components/TopologyDetailComponent.html":{"ref":"components/TopologyDetailComponent.html","tf":0.018292682926829267},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01834862385321101},"injectables/CanDeactivateGuard.html":{"ref":"injectables/CanDeactivateGuard.html","tf":0.021739130434782608},"injectables/ConfigService.html":{"ref":"injectables/ConfigService.html","tf":0.03424657534246575},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.07246376811594203},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.009174311926605505},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.05128205128205128},"injectables/MessageService.html":{"ref":"injectables/MessageService.html","tf":0.05263157894736842},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0027881040892193307},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.014492753623188406},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.02973977695167286},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.058823529411764705}}}}}},"z":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.028985507246376812},"modules/AboutRoutineModule.html":{"ref":"modules/AboutRoutineModule.html","tf":0.030303030303030304},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.023255813953488372},"modules/AppRoutineModule.html":{"ref":"modules/AppRoutineModule.html","tf":0.045454545454545456},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"modules/HomeModule.html":{"ref":"modules/HomeModule.html","tf":0.04081632653061224},"modules/HomeRoutineModule.html":{"ref":"modules/HomeRoutineModule.html","tf":0.03278688524590164},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.028985507246376812},"modules/OutputModule.html":{"ref":"modules/OutputModule.html","tf":0.037037037037037035},"modules/OutputRoutineModule.html":{"ref":"modules/OutputRoutineModule.html","tf":0.0425531914893617},"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.018518518518518517}}}}},"i":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}},"l":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}},"a":{"docs":{},"y":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.014492753623188406}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":0.11538461538461539},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":0.11538461538461539},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":0.11538461538461539},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":0.11538461538461539},"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.015384615384615385},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03488372093023256},"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":5.028985507246377}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.07246376811594203},"components/LayoutMainComponent.html":{"ref":"components/LayoutMainComponent.html","tf":5.0576923076923075},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.07246376811594203},"components/LayoutFooterComponent.html":{"ref":"components/LayoutFooterComponent.html","tf":5.0576923076923075},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.07246376811594203},"components/LayoutHeaderComponent.html":{"ref":"components/LayoutHeaderComponent.html","tf":5.0576923076923075},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/LayoutModule.html":{"ref":"modules/LayoutModule.html","tf":0.07246376811594203},"components/LayoutNaviComponent.html":{"ref":"components/LayoutNaviComponent.html","tf":5.0576923076923075},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DiagramService.html":{"ref":"injectables/DiagramService.html","tf":0.028985507246376812}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Address.html":{"ref":"classes/Address.html","tf":0.033707865168539325}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.027522935779816515},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"classes/TopologyItem.html":{"ref":"classes/TopologyItem.html","tf":0.05333333333333334},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/ITopologyItem.html":{"ref":"interfaces/ITopologyItem.html","tf":0.0449438202247191},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.011152416356877323}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AboutModule.html":{"ref":"modules/AboutModule.html","tf":0.043478260869565216},"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.019011406844106463},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":5.033333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/LinkDataService.html":{"ref":"injectables/LinkDataService.html","tf":0.03333333333333333},"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.01486988847583643},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.02577319587628866},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":5.030927835051546},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.02577319587628866},"classes/Port.html":{"ref":"classes/Port.html","tf":0.02577319587628866},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.02577319587628866},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.025906735751295335},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.04128440366972477},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.025906735751295335},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.025906735751295335},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.025906735751295335},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":0.03669724770642202}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.021052631578947368},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.01529051987767584},"injectables/LinkTemplateService.html":{"ref":"injectables/LinkTemplateService.html","tf":5.018348623853211},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}}},"t":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},"o":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TopologyService.html":{"ref":"injectables/TopologyService.html","tf":0.0037174721189591076}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.010309278350515464},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.010309278350515464},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.010309278350515464},"classes/Port.html":{"ref":"classes/Port.html","tf":0.010309278350515464},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.010309278350515464},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.010362694300518135},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.01834862385321101},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.010362694300518135},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.010362694300518135},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928}}}}}},"s":{"docs":{},"t":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.021739130434782608}}}}}},"t":{"docs":{"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyListComponent.html":{"ref":"components/TopologyListComponent.html","tf":0.010869565217391304},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365}}}}},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":0.10256410256410256}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.031746031746031744},"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.03225806451612903},"injectables/LoggingService.html":{"ref":"injectables/LoggingService.html","tf":5.051282051282051},"injectables/OutputService.html":{"ref":"injectables/OutputService.html","tf":0.07246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}}}}}}}}}}},"c":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/IDevice.html":{"ref":"interfaces/IDevice.html","tf":0.0297029702970297},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":0.0051813471502590676},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769},"classes/BottomArray.html":{"ref":"classes/BottomArray.html","tf":0.005154639175257732},"classes/LinkDataArray.html":{"ref":"classes/LinkDataArray.html","tf":0.005154639175257732},"classes/NodeDataArray.html":{"ref":"classes/NodeDataArray.html","tf":0.005154639175257732},"classes/Port.html":{"ref":"classes/Port.html","tf":0.005154639175257732},"classes/Topology.html":{"ref":"classes/Topology.html","tf":0.005154639175257732},"interfaces/IBottomArray.html":{"ref":"interfaces/IBottomArray.html","tf":0.0051813471502590676},"interfaces/ITopology.html":{"ref":"interfaces/ITopology.html","tf":0.0045871559633027525},"interfaces/LeftArray.html":{"ref":"interfaces/LeftArray.html","tf":5.010362694300518},"interfaces/RightArray.html":{"ref":"interfaces/RightArray.html","tf":0.0051813471502590676},"interfaces/TopArray.html":{"ref":"interfaces/TopArray.html","tf":0.0051813471502590676},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"n":{"docs":{"classes/CustomLink.html":{"ref":"classes/CustomLink.html","tf":0.006578947368421052}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364},"injectables/TopologyWorkerResolver.html":{"ref":"injectables/TopologyWorkerResolver.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}},"t":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TopologyModule.html":{"ref":"modules/TopologyModule.html","tf":0.010526315789473684},"modules/TopologyRoutineModule.html":{"ref":"modules/TopologyRoutineModule.html","tf":0.009259259259259259},"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682},"coverage.html":{"ref":"coverage.html","tf":0.0033783783783783786}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.04433497536945813},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.004646840148698885}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0018587360594795538}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/AboutDescriptionComponent.html":{"ref":"components/AboutDescriptionComponent.html","tf":0.0038022813688212928},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.006505576208178439}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0061162079510703364}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}},"o":{"docs":{},"b":{"docs":{"injectables/HttpErrorHandler.html":{"ref":"injectables/HttpErrorHandler.html","tf":0.0064516129032258064}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"components/TopologyWorkerComponent.html":{"ref":"components/TopologyWorkerComponent.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/DummyShapeProvider.html":{"ref":"injectables/DummyShapeProvider.html","tf":0.0049261083743842365},"injectables/NodeTemplateService.html":{"ref":"injectables/NodeTemplateService.html","tf":0.0009293680297397769}}}}}}}}},"length":3533},"corpusTokens":["0","0,0","0.0","0/0","0/1","0/12","0/15","0/2","0/3","0/4","0/5","0/6","0/7","0/9","1","1,4","1.0","1.7.0","1/16","1/2","1/8","10","100","11","12","13","14px","15","150","16","2","2/2","20","200","25","2f4f4f","3","3/8","300","369","37","4","40","5","5,0","50","6","65","70","74512","8","_side","about/about.modul","aboutdescriptioncompon","aboutmodul","aboutrout","aboutroutinemodul","action","activatedrout","activatedroutesnapshot","add","add(messag","addit","additin","address","address1","address2","addtopolog","addtopology(nam","again","al","alert(\"homedescriptioncompon","alert(s.source);return","alert(this.topologyjson","allow","alpha","alreadi","alternative_phon","angular","angular/common","angular/common/http","angular/cor","angular/form","angular/platform","angular/rout","app","app.compon","app.component.css","app.component.html","appabout","appcompon","appear","appmodul","apppag","approut","approutinemodul","arr","arr.length","array","artifact","ask","assets/config.json","assets/images/cfix.png","assets/images/nettap.png","assets/images/netx51.png","async","auto","automat","b","background","bar(button","befor","behaviorsubject","behaviorsubject(topolog","below","beta","better","between","bind","black","bodi","boolean","bootstrap","bother","bottom","bottomarray","bound","brows","browser","browser.get","browsermodul","bs","bs/idevic","bs/ilink","bs/iport","bs/topolog","build","c","call","cancel","cancomponentdeactiv","candeactiv","candeactivate(compon","candeactivateguard","catcherror","catcherror(this.handleerror","center","chang","check","children","citi","class","clear","cli","click","cloud","club","code","collaps","color","column","commonmodul","compani","compon","component.candeactiv","components/about","components/description/hom","components/footer/layout","components/header/layout","components/home.compon","components/main/layout","components/navi/layout","components/topolog","computecurvi","computeendsegmentlength","computeendsegmentlength(nod","concis","config","config:config","configservic","configservice:configservic","configurl","consol","console.error(error","console.info(\"getconfig","console.info(this.outputlist","console.log","console.log(\"cut","console.log(\"topologyhomecompon","console.log(this.topologyjson","const","constructor","constructor(c","constructor(configservic","constructor(dummynodetemplateprovid","constructor(httpcli","constructor(messageservic","constructor(outputservic","constructor(portcolor","constructor(priv","constructor(publ","constructor(rout","constructor(topologyservic","consumpt","contain","content","context","contextmenu","contextmenubutton","copiesarray","copiesarrayobject","core/core.modul","core/guard/can","core/models/bs/topolog","core/models/topolog","core/services/config","core/services/http","core/services/logging.servic","core/services/message.servic","core/services/topology.servic","core/utils/diagram.servic","core/utils/link","core/utils/nod","coremodul","corner","count","country_id","coverag","creat","createarraydata","createarraydata(tot","createhandleerror","createlinkdata","createlinkdata(link","createnodedata","createnodedata(devic","createnodeportarray","createnodeportarray(tot","createtopo","createtopo(topoitem","crisi","crisisid","cs","curri","cursor","curv","custom","customlink","cut","d","dash","data","data.bottomarray","data.color","data.key","data.leftarray","data.rightarray","data.servic","data.service.t","data.thick","data.toparray","data.topolog","data.topology.nam","de","deactiv","decid","declar","default","defaultalign","defin","desc","describ","descrip","descript","description.compon","description.component.css","description.component.html","description.component.t","desireds","detail","detail.compon","detail.component.css","detail.component.html","detail.component.t","detail/topolog","dev","develop","devic","devices","diagram","diagramdiv","diagramservic","diagramservice,linktemplateservic","dialog","dialogservic","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","document","dojob","don't","dtminfo","dummynodetemplateprovid","dummyshapeprovid","e","e.g","e2","e2e/app.po.t","each","easier","edit","editnam","element","element(by.css('app","elementref","ellips","enabl","enable(nam","enableal","enableall(diagram","end","environ","error","error(error","error.error","error.error.messag","error.statu","errorev","errorfunction:(s,ss","execut","expand","export","extend","f1","fail","fake","fals","figur","figurenam","file","fill","find","findsideportindexandcount","firstnam","flag","font","foo","footer","footer.compon","footer.component.css","footer.component.html","footer.component.t","formsmodul","forroot","found","fromid","fromlink","fromport","frompt.i","frompt.x","fromseglen","fromspot","fromspot.equals(go.spot.bottom","fromspot.equals(go.spot.left","fromspot.equals(go.spot.right","fromspot.equals(go.spot.top","full","full_nam","function","further","gayway","gener","geometrystr","getal","getallshapebyfigur","getbyusingpanel","getconfig","getconfig_1","getconfig_2","getconfig_3","getconfigrespons","getlinkdataarray","getlinktempl","getlinktemplate_1","getnodedataarray","getnodetemplate_1","getnodetemplate_11","getnodetemplate_2","getnodetemplate_3","getnodetemplate_4","getparagraphtext","getshapebyfigur","getshapebyfigure(figurenam","gettopolog","gettopology(id","getupportmenu","ghislain","give","go","go.adorn","go.binding(\"fil","go.binding(\"itemarray","go.binding(\"loc","go.binding(\"points\").maketwoway","go.binding(\"portid","go.binding(\"sourc","go.binding(\"source\",\"src","go.binding(\"strok","go.binding(\"strokewidth","go.binding(\"text","go.binding(\"text\",\"devicenam","go.binding(\"text\",\"tool","go.binding(\"vis","go.brush","go.diagram","go.graphlinksmodel(nodedata","go.graphlinksmodel(nodedataarray","go.graphobject.fil","go.graphobject.mak","go.gridlayout","go.link","go.link.avoidsnod","go.link.jumpgap","go.link.orthogon","go.margin(0","go.margin(1","go.margin(5","go.nod","go.panel","go.part","go.pictur","go.point.parse).maketwoway(go.point.stringifi","go.rowcolumndefinit","go.shap","go.size(12","go.size(15","go.size(150","go.size(156","go.size(2","go.size(200","go.size(300,140","go.size(8","go.spot(0","go.spot(1","go.spot.bottom","go.spot.cent","go.spot.left","go.spot.right","go.spot.top","go.textblock","go.textblock,{row:2","goj","goodby","gotocris","gototolog","graphlinksmodel","graphlinksmodel.linkfromportidproperti","graphlinksmodel.linktoportidproperti","graphobject","graphobject.vis","gray","green","guard.servic","guard.service.t","gut","h1')).gettext","handl","handleerror","handleerror(servicenam","handler.servic","handler.service.t","hascurvi","hast","header","header.compon","header.component.css","header.component.html","header.component.t","height","help","hexagon","hold","home","home.compon","home.component.css","home.component.html","home.component.t","home/home.modul","home/topolog","homecompon","homedescriptioncompon","homemodul","homerout","homeroutinemodul","homeurl","horizont","hostbind","http","http://localhost:4200","httpclient","httpclientmodul","httperrorhandl","httperrorhandler.createhandleerror","httperrorhandler.createhandleerror('configservic","httperrorhandler.createhandleerror('todoservic","httperrorrespons","httprespons","https://gojs.net/latest/intro/shapes.html","ibottomarray","id","identifi","idevic","idx","ii.topologyurl","ilink","imag","images","img","implement","import","includ","index","indic","info","info[0","info[1","infos.push(inn","infos:str","init","inital","initdata","initi","initialcontentalign","inject","insid","instanceof","interfac","intern","iport","isaction","iscomplet","it'","item","item.t","itemarray","itemtempl","itopolog","itopologyitem","job","json.stringify(this.topolog","jsonpip","karma","keep","key","know","l","lastnam","lavend","lay","layout","layout(mydiagram","layout/layout.modul","layoutfootercompon","layoutheadercompon","layoutmaincompon","layoutmodul","layoutnavicompon","left","leftarray","leftsid","len","lightgray","lightgreen","linear","link","link.from","link.fromport","link.t","link.to","link.toport","linkcolor","linkdata","linkdata.from","linkdata.fromport","linkdata.linkcolor","linkdata.to","linkdata.toport","linkdataarray","linkdataservic","linkfromportidproperti","linktempl","linktemplateservic","linktoportidproperti","list","list.compon","list.component.css","list.component.html","list.component.t","list/topolog","loc","locationobjectnam","locationspot","log","logging.servic","loggingservic","m","main","main.compon","main.component.css","main.component.html","main.component.t","make","makebutton","makebutton(text","makeitemtempl","makeitemtemplate(leftsid","map(topo","margin","match","math.abs(frompt.i","math.abs(thispt.i","mayb","menu","messag","message.servic","messageservic","metadata","method","minsiz","miscellan","modal","model","models/bs/idevic","models/bs/ilink","models/config","modul","more","mydiagram.layout","mydiagram.starttransaction(\"chang","myfirstangular5","mynod","name","name\").maketwoway","navi","navi.compon","navi.component.css","navi.component.html","navi.component.t","navig","navigateto","new","nextcrisisid","ng","ngmodul","ngoninit","node","node.data","node2","nodedata","nodedata.bottomarray","nodedata.img","nodedata.typ","nodedata[sid","nodedataarray","nodedatas=[{devicename:\"devic","nodedataservic","nodemenu","nodetempl","nodetemplateservic","now","nr.1","nr.2","nr1","nr1\",devicename:\"devic","null","number","number,numbergateway?:numb","numberdevic","numbergateway","o","o.diagram","ob","obarray","obarray.subscribe(topoarray","obeect","obj","observ","observable.of(topolog","observable.of(tru","ofobject","ok","oldskip","oninit","opentriangl","oper","orang","order","orthogon","otherpt.i","otherpt.x","otherwis","out","outlet","output","output.compon","output.component.css","output.component.html","output/output.modul","outputcompon","outputlist","outputmodul","outputrout","outputroutinemodul","outputservic","overview","panel","parammap","params.get('id","part","path","pathmatch","phone","pic","pic:\"pictur","picture,nam","pipe","pipe(catcherror(this.handleerror('inital","place","pointer","port","port._sid","port.data","portcolor","portdata","portid","portid:\"port1\",portcolor:\"#7fff","portmenu","ports:[{portid:\"port0\",portcolor:\"#c25c","ports:[{portid:\"port0\",portcolor:\"#f1230","portsiz","predic","privat","procedur","prod","product","project","promis","properti","protocol","protractor","provid","providers:[loggingservic","providers:[outputservic","ps","public","randomli","readm","record","rectangl","redirect","redirectto","registri","relat","relativeto","relink","relinkablefrom","relinkableto","reload","request","requir","resegment","reset","reshap","resolv","resolve(rout","resolver.servic","resolver.service.t","respons","result","retri","retry(3","return","right","rightarray","root","roundedrectangl","roundedrectangle\",{fill:null,desiredsize:new","rout","route.parammap.get('id","router","routermodul","routermodule.forchild(aboutrout","routermodule.forchild(homerout","routermodule.forchild(outputrout","routermodule.forchild(toporout","routermodule.forroot(approutes,{enabletracing:tru","routerstatesnapshot","routine.modul","routine.module.t","row","row:0","row:1","run","rxjs/add/observable/of","rxjs/add/operator/map","rxjs/add/operator/switchmap","rxjs/add/operator/tak","rxjs/behaviorsubject","rxjs/observ","rxjs/observable/of","rxjs/oper","safe","save","scaffold","see","sego","select","selectedbrush","selectedid","selectionobjectnam","selector","serif","serv","server","servic","service.se","service.t","servicedialogservic","servicenam","services/config","services/dummi","services/dummy.shape.provid","services/http","services/link","services/logging.servic","services/message.servic","services/nod","services/output.servic","services/topolog","services/topology.servic","set","setconfig","setimag","setimage(nodedata","shape","shape.diagram.skipsundomanag","shape.fil","shape.strok","shape.strokewidth","shape_typ","shapetoreturn","showt","side","simpl","size","sophist","sourc","space","spahe","spot","spot1","spot2","src/app/about/about","src/app/about/about.module.t","src/app/about/components/about","src/app/about/services/dummi","src/app/about/services/dummy.shape.provider.t","src/app/about/services/link","src/app/about/services/nod","src/app/app","src/app/app.component.t","src/app/app.module.t","src/app/core/core.module.t","src/app/core/guard/can","src/app/core/models/address.t","src/app/core/models/bs/idevice.t","src/app/core/models/bs/ilink.t","src/app/core/models/bs/iport.t","src/app/core/models/bs/topolog","src/app/core/models/config.t","src/app/core/models/todo.t","src/app/core/models/topology.t","src/app/core/services/config","src/app/core/services/http","src/app/core/services/logging.service.t","src/app/core/services/message.service.t","src/app/core/services/topology.service.t","src/app/core/utils/custom","src/app/core/utils/diagram.service.t","src/app/core/utils/link","src/app/core/utils/nod","src/app/home/components/description/hom","src/app/home/components/home.component.t","src/app/home/hom","src/app/home/home.module.t","src/app/layout/components/footer/layout","src/app/layout/components/header/layout","src/app/layout/components/main/layout","src/app/layout/components/navi/layout","src/app/layout/layout.module.t","src/app/output/output","src/app/output/output.component.t","src/app/output/output.module.t","src/app/output/services/output.service.t","src/app/topology/components/topolog","src/app/topology/services/topolog","src/app/topology/topolog","src/app/topology/topology.module.t","src:\"/assets/images/cfix.png","stackpanel","standart","state","state_id","state_nam","state_text","statement","static","store","strategi","stretch","string","stroke","strokewidth","styleurl","subscribe((data","super","super.computecurviness.call(thi","support","supportprotocol","svg","switchmap((param","synchron","t","tabl","table\",{background:\"green","tb","tb.panel.findobject(\"shap","tell","templat","template.provid","template.provider.t","template.servic","template.service.t","templateurl","test","text","textalign","textblock.text","themselv","there'","thick","this.changecolor(obj.part.adornedobject","this.class","this.computeendsegmentlength(fromnod","this.computeendsegmentlength(tonod","this.config","this.configservice.getconfig_2().subscribe(ii","this.configservice.getconfig_2().subscribe(valu","this.configservice.setconfig","this.configurl","this.createlinkdata(link","this.createnodedata(devic","this.cs.gettopology(id).take(1).map(topo","this.diagram","this.diagram.add(ghislain","this.diagram.add(mynod","this.diagram.commandhandler.cutselect","this.diagram.initialcontentalign","this.diagram.layout","this.diagram.linktempl","this.diagram.model","this.diagram.nodetempl","this.diagram.pad","this.diagram.undomanager.isen","this.diagramdiv.nativeel","this.dummyshapeprovider.getallshapebyfigur","this.dummyshapeprovider.getbyusingpanel","this.editnam","this.findsideportindexandcount(nod","this.getconfig_2().subscribe(valu","this.gettopolog","this.getupportmenu","this.gotocris","this.handleerror","this.handleerror(servicenam","this.httpclient.get","this.httpclient.get(this.configurl","this.httpclient.get(this.topologyurl","this.id","this.inital","this.initdata","this.linktemplateservice.getlinktempl","this.log","this.loggingservice.error(error","this.loggingservice.logs.foreach(inn","this.logs.push(error","this.makebutton(\"chang","this.makebutton(\"swap","this.messag","this.messages.push(messag","this.messageservice.add('discard","this.messageservice.add(`${servicenam","this.messageservice.messages.foreach(inn","this.nodetemplateservice.getnodetemplate_1","this.outputlist","this.outputservice.getal","this.portcolor","this.portid","this.rout","this.route.data","this.route.data.subscribe((data","this.route.parammap","this.route.parammap.switchmap((param","this.router.navig","this.router.navigate(['/crisi","this.selectedid","this.swaporder(obj.part.adornedobject","this.topolog","this.topology$.subscribe(topo","this.topology.id","this.topology.linkdataarray","this.topology.nam","this.topology.nodedataarray","this.topologyjson","this.topologyservice.gettopolog","this.topologyservice.gettopology(id).take(1).map(topo","this.topologyservice.gettopology(params.get('id","this.topologyurl","this.usingpanel","this.usingpanels_1","this.usingperson","time","titl","toarrow","todo","todourl","toggl","toid","tolink","tool:\"tool","top","toparray","topo","topo.id","topoitem.link","topoitem.links.foreach(link","topolog","topologies.length","topologies.splice(0","topology.linkdataarray","topology.linkdataarray.push(linkdata","topology.nodedataarray.push(nodedata","topology/topology.modul","topologydetailcompon","topologydetailresolv","topologydetailresolver,topologyworkerresolv","topologyhomecompon","topologyitem","topologyjson","topologylistcompon","topologymodul","topologyroutinemodul","topologyservic","topologyurl","topologyworkercompon","topologyworkerresolv","toporout","toport","topos.find(topo","topt.i","topt.x","toreturn","toseglen","tospot","tospot.equals(go.spot.bottom","tospot.equals(go.spot.left","tospot.equals(go.spot.right","tospot.equals(go.spot.top","transform","treeexpanderbutton","true","turn","type","ui,san","unchang","undefin","unit","unselectedbrush","up","us","user","usingpanel","usingpanels_1","valu","value,eooro","value.topologyurl","var","variabl","vendor","version","vertic","via","viewchild","viewchild('mydiagramdiv","violet","violetbrush","visibl","visiblepred","visiblepredicate(o","void","whether","white","width","worker","worker.compon","worker.component.css","worker.component.html","worker.component.t","worker/topolog","xxxxxxxxxxxxxxxx","yellow","z","zipcod","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nMyFirstAngular5\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            12 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        13 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            6 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AboutModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AboutRoutineModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppRoutineModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    CoreModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomeModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomeRoutineModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    LayoutModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    OutputModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    OutputRoutineModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TopologyModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TopologyRoutineModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutModule.html":{"url":"modules/AboutModule.html","title":"module - AboutModule","body":"\n                   \n\n\n  Modules\n  AboutModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/about.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutDescriptionComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                DummyShapeProvider\n                            \n                            \n                                LinkDataService\n                            \n                            \n                                NodeDataService\n                            \n                            \n                                DummyNodeTemplateProvider\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutRoutineModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AboutDescriptionComponent } from './components/about-description.component';\r\nimport { AboutRoutineModule } from './about-routine.module';\r\nimport { DummyShapeProvider } from './services/dummy.shape.provider';\r\nimport { DummyNodeTemplateProvider } from './services/dummy-node-template.provider';\r\nimport { NodeDataService } from './services/node-data.service';\r\nimport { LinkDataService } from './services/link-data.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AboutRoutineModule\r\n  ],\r\n  declarations: [AboutDescriptionComponent],\r\n  providers: [DummyShapeProvider, LinkDataService, NodeDataService, DummyNodeTemplateProvider]\r\n})\r\nexport class AboutModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutRoutineModule.html":{"url":"modules/AboutRoutineModule.html","title":"module - AboutRoutineModule","body":"\n                   \n\n\n  Modules\n  AboutRoutineModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/about-routine.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutDescriptionComponent } from './components/about-description.component';\r\n\r\nconst aboutRoutes: Routes = [\r\n  { path: 'about', redirectTo: '/appabout' }, //Add a the route to redirect to home-desc\r\n  { path: 'appabout', component: AboutDescriptionComponent } // Add the route to call the Home-Descrip Component\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    RouterModule.forChild(aboutRoutes) // Registry your  home route -- Not forRoot!!!\r\n  ],\r\n  exports: [RouterModule]\r\n\r\n})\r\nexport class AboutRoutineModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TopologyModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    LayoutModule\n                            \n                            \n                                    AboutModule\n                            \n                            \n                                    OutputModule\n                            \n                            \n                                    AppRoutineModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeModule } from './home/home.module';\r\nimport { AppRoutineModule } from './app-routine.module';\r\n\r\n\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CoreModule } from './core/core.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LayoutModule } from './layout/layout.module';\r\n\r\nimport { AboutModule } from './about/about.module';\r\n\r\nimport { OutputModule } from './output/output.module';\r\nimport { TopologyModule } from './topology/topology.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule,\r\n    TopologyModule,\r\n    HomeModule,\r\n    LayoutModule,\r\n\r\n    AboutModule,\r\n    OutputModule,\r\n\r\n\r\n    AppRoutineModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutineModule.html":{"url":"modules/AppRoutineModule.html","title":"module - AppRoutineModule","body":"\n                   \n\n\n  Modules\n  AppRoutineModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routine.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n \r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/home',  pathMatch: 'full'  }   \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes,{enableTracing:true})\r\n  ],\r\n  exports: [    RouterModule  ]\r\n})\r\nexport class AppRoutineModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n  Modules\n  CoreModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                            \n                                LoggingService\n                            \n                            \n                                ConfigService\n                            \n                            \n                                TopologyService\n                            \n                            \n                                HttpErrorHandler\n                            \n                            \n                                MessageService\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoggingService } from './services/logging.service';\r\nimport { HttpErrorHandler } from './services/http-error-handler.service';\r\nimport { MessageService } from './services/message.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ConfigService } from './services/config-service';\r\nimport { TopologyService } from './services/topology.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n  ],\r\n  declarations: [],\r\n  providers:[LoggingService, ConfigService,  TopologyService,    HttpErrorHandler, MessageService ]\r\n})\r\nexport class CoreModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n  Modules\n  HomeModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeDescriptionComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomeRoutineModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeRoutineModule } from './home-routine.module';\r\nimport { HomeDescriptionComponent } from './components/description/home-description.component';\r\nimport { HomeComponent } from './components/home.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    HomeRoutineModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [HomeDescriptionComponent, HomeComponent]\r\n})\r\nexport class HomeModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutineModule.html":{"url":"modules/HomeRoutineModule.html","title":"module - HomeRoutineModule","body":"\n                   \n\n\n  Modules\n  HomeRoutineModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/home/home-routine.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeDescriptionComponent } from './components/description/home-description.component';\r\nimport { HomeComponent } from './components/home.component';\r\n\r\n\r\n\r\nconst homeRoutes: Routes = [\r\n  { path: 'home', component: HomeComponent } // Add the route to call the Home-Descrip Component\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    RouterModule.forChild(homeRoutes) // Registry your  home route -- Not forRoot!!!\r\n  ],\r\n  exports: [RouterModule]\r\n\r\n})\r\nexport class HomeRoutineModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n  Modules\n  LayoutModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LayoutHeaderComponent\n                            \n                            \n                                LayoutNaviComponent\n                            \n                            \n                                LayoutMainComponent\n                            \n                            \n                                LayoutFooterComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LayoutHeaderComponent\n                            \n                            \n                                    LayoutNaviComponent\n                            \n                            \n                                    LayoutMainComponent\n                            \n                            \n                                    LayoutFooterComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutHeaderComponent } from './components/header/layout-header.component';\r\nimport { LayoutNaviComponent } from './components/navi/layout-navi.component';\r\nimport { LayoutFooterComponent } from './components/footer/layout-footer.component';\r\nimport { LayoutMainComponent } from './components/main/layout-main.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [LayoutHeaderComponent, LayoutNaviComponent, LayoutMainComponent, LayoutFooterComponent],\r\n  exports: [LayoutHeaderComponent, LayoutNaviComponent, LayoutMainComponent, LayoutFooterComponent]\r\n})\r\nexport class LayoutModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OutputModule.html":{"url":"modules/OutputModule.html","title":"module - OutputModule","body":"\n                   \n\n\n  Modules\n  OutputModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/output/output.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                OutputService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    OutputRoutineModule\n                            \n                            \n                                    CoreModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OutputRoutineModule } from './output-routine.module';\r\nimport { OutputService } from './services/output.service';\r\nimport { OutputComponent } from './output.component';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OutputRoutineModule,\r\n    CoreModule,\r\n  ],\r\n  declarations: [OutputComponent],\r\n  providers:[OutputService]\r\n})\r\nexport class OutputModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OutputRoutineModule.html":{"url":"modules/OutputRoutineModule.html","title":"module - OutputRoutineModule","body":"\n                   \n\n\n  Modules\n  OutputRoutineModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/output/output-routine.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n \r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OutputComponent } from './output.component';\r\n\r\n\r\nconst outputRoutes: Routes = [   \r\n { path: 'app-output', component: OutputComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(outputRoutes)\r\n  ],\r\n  exports: [    RouterModule  ]\r\n})\r\nexport class OutputRoutineModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TopologyModule.html":{"url":"modules/TopologyModule.html","title":"module - TopologyModule","body":"\n                   \n\n\n  Modules\n  TopologyModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topology/topology.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TopologyHomeComponent\n                            \n                            \n                                TopologyListComponent\n                            \n                            \n                                TopologyWorkerComponent\n                            \n                            \n                                TopologyDetailComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                CanDeactivateGuard\n                            \n                            \n                                NodeTemplateService\n                            \n                            \n                                DiagramService\n                            \n                            \n                                LinkTemplateService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TopologyRoutineModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n \r\n \r\nimport { TopologyListComponent } from './components/topology-list/topology-list.component';\r\nimport { TopologyDetailComponent } from './components/topology-detail/topology-detail.component';\r\nimport { TopologyHomeComponent } from './components/topology-home/topology-home.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TopologyRoutineModule } from './topology-routine.module';\r\nimport { CanDeactivateGuard } from '../core/guard/can-deactivate-guard.service';\r\nimport { TopologyWorkerComponent } from './components/topology-worker/topology-worker.component';\r\nimport { LinkTemplateService } from '../core/utils/link-template.service';\r\nimport { NodeTemplateService } from '../core/utils/node-template.service';\r\nimport { DiagramService } from '../core/utils/diagram.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TopologyRoutineModule\r\n  ],\r\n  declarations: [\r\n    TopologyHomeComponent,\r\n    TopologyListComponent,  \r\n    TopologyWorkerComponent ,\r\n    TopologyDetailComponent\r\n  ],\r\n  providers: [\r\n    CanDeactivateGuard, NodeTemplateService, DiagramService,LinkTemplateService\r\n  ]\r\n})\r\n\r\nexport class TopologyModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TopologyRoutineModule.html":{"url":"modules/TopologyRoutineModule.html","title":"module - TopologyRoutineModule","body":"\n                   \n\n\n  Modules\n  TopologyRoutineModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topology/topology-routine.module.ts\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                            \n                                TopologyDetailResolver\n                            \n                            \n                                TopologyWorkerResolver\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TopologyListComponent } from './components/topology-list/topology-list.component';\r\nimport { TopologyDetailComponent } from './components/topology-detail/topology-detail.component';\r\nimport { CanDeactivateGuard } from '../core/guard/can-deactivate-guard.service';\r\nimport { TopologyDetailResolver } from './services/topology-detail-resolver.service';\r\nimport { TopologyHomeComponent } from './components/topology-home/topology-home.component';\r\nimport { TopologyWorkerComponent } from './components/topology-worker/topology-worker.component';\r\nimport { TopologyWorkerResolver } from './services/topology-worker-resolver.service';\r\n\r\n\r\n\r\nconst topoRoutes: Routes = [\r\n  {\r\n    path: 'app-topology-home',\r\n    component: TopologyHomeComponent,\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        component: TopologyListComponent,\r\n        children: [\r\n          {\r\n            path: ':id',\r\n            component: TopologyWorkerComponent,\r\n            canDeactivate: [CanDeactivateGuard],\r\n            resolve: {              topology: TopologyWorkerResolver            }},  \r\n            {\r\n              path: ':id',\r\n              outlet: \"router-de\",\r\n              component: TopologyDetailComponent,\r\n              canDeactivate: [CanDeactivateGuard],\r\n              resolve: {\r\n                topology: TopologyDetailResolver\r\n              }\r\n            }          \r\n             \r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(topoRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    TopologyDetailResolver,TopologyWorkerResolver\r\n  ]\r\n})\r\nexport class TopologyRoutineModule { }\r\n\r\n\r\n\r\n\r\n\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutDescriptionComponent.html":{"url":"components/AboutDescriptionComponent.html","title":"component - AboutDescriptionComponent","body":"\n                   \n\n\n\n  Components\n  AboutDescriptionComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/about/components/about-description.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                about-description.component.css\n            \n\n\n\n            \n                templateUrl\n                about-description.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dummyNodeTemplateProvider: DummyNodeTemplateProvider, linkDataService: LinkDataService, nodeDataService: NodeDataService, dummyShapeProvider: DummyShapeProvider)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Private usingPanels_1\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            usingPanels_1()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private usingPanels\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            usingPanels()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             diagram\n                        \n                    \n                    \n                        \n                            diagram:     Diagram\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             diagramDiv\n                        \n                    \n                    \n                        \n                            diagramDiv:     ElementRef\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport * as go from 'gojs'\r\nimport { DummyShapeProvider } from '../services/dummy.shape.provider';\r\nimport { DummyNodeTemplateProvider } from '../services/dummy-node-template.provider';\r\nimport { NodeDataService } from '../services/node-data.service';\r\nimport { LinkDataService } from '../services/link-data.service';\r\n \r\nimport { Observable } from 'rxjs/Observable';\r\n \r\nimport { element } from 'protractor';\r\n\r\n@Component({\r\n    templateUrl: './about-description.component.html',\r\n    styleUrls: ['./about-description.component.css']\r\n})\r\nexport class AboutDescriptionComponent implements OnInit { \r\n\r\n    @ViewChild('myDiagramDiv')\r\n    diagramDiv: ElementRef;\r\n\r\n    diagram: go.Diagram;\r\n\r\n    constructor(private dummyNodeTemplateProvider: DummyNodeTemplateProvider,\r\n        private linkDataService: LinkDataService,\r\n        private nodeDataService: NodeDataService,\r\n        private dummyShapeProvider: DummyShapeProvider,\r\n       ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.usingPanels_1();\r\n        // this.usingPerson();\r\n\r\n    }\r\n\r\n   private usingPanels_1()  : void  {\r\n    var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n\r\n    this.diagram = $(go.Diagram, this.diagramDiv.nativeElement,\r\n        {\r\n            initialContentAlignment: go.Spot.Center  // center the content\r\n        });\r\n        var portSize = new go.Size(12, 8);\r\n        this.diagram.nodeTemplate=\r\n            $(go.Node, \"Vertical\",\r\n            $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\",{fill:null,desiredSize:new go.Size(300,140)}),\r\n          \r\n            $(go.Panel, \"Table\",{background:\"green\"},\r\n            $(go.TextBlock, {row:0} ,new go.Binding(\"text\",\"deviceName\")),\r\n            $(go.Picture, { width: 300, height: 100 }, {errorFunction:(s,ss)=>{ alert(s.source);return null}}, {row:1}, new go.Binding(\"source\",\"src\")),\r\n            $(go.TextBlock,{row:2}, new go.Binding(\"text\",\"tool\")))),\r\n            $(go.Panel, \"Horizontal\",\r\n            new go.Binding(\"itemArray\", \"ports\"),\r\n            { \r\n              itemTemplate:\r\n                $(go.Panel,\r\n                  { _side: \"bottom\",\r\n                    fromSpot: go.Spot.Bottom, toSpot: go.Spot.Bottom,\r\n                    fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                     },\r\n                  new go.Binding(\"portId\", \"portId\"),\r\n                  $(go.Shape, \"Rectangle\",\r\n                    { stroke: null, strokeWidth: 0,\r\n                      desiredSize: portSize,\r\n                      margin: new go.Margin(0, 1) },\r\n                    new go.Binding(\"fill\", \"portColor\"))\r\n                )  // end itemTemplate\r\n            }\r\n          )) ;         \r\n    \r\n\r\n          var nodeDatas=[{deviceName:\"Device Nr.1\" ,\r\n           src:\"/assets/images/cfix.PNG\" ,\r\n           pic:\"Picture Place\",\r\n           ports:[{portId:\"port0\",portColor:\"#c25c\"}, {portId:\"port1\",portColor:\"#7fff\"}],\r\n           tool:\"Tool Nr1\"},\r\n           \r\n             {ports:[{portId:\"port0\",portColor:\"#F1230\"}],\r\n             tool:\"Tool Nr1\",deviceName:\"Device Nr.2\"}]\r\n          this.diagram.model= new go.GraphLinksModel(nodeDatas);\r\n        \r\n   }\r\n \r\n\r\n\r\n\r\n\r\n    private usingPanels(): void {\r\n        var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n\r\n        this.diagram = $(go.Diagram, this.diagramDiv.nativeElement,\r\n            {\r\n                initialContentAlignment: go.Spot.Center  // center the content\r\n            });\r\n\r\n\r\n        var violetbrush = $(go.Brush, \"Linear\", { 0.0: \"Violet\", 1.0: \"Lavender\" });\r\n        var node2 = $(go.Node, \"Auto\",\r\n            $(go.Shape, \"Ellipse\", { fill: violetbrush }),\r\n            $(go.TextBlock, \"Goodbye!\", { margin: 5 })\r\n        );\r\n        var ghislain = $(go.Part, \"Vertical\",\r\n            $(go.Shape,\r\n                { figure: \"RoundedRectangle\", fill: 'green' }),\r\n            $(go.TextBlock,\r\n                { text: \"Ghislain\" }));\r\n\r\n\r\n        var spahe = this.dummyShapeProvider.getAllShapeByFigure();\r\n        var myNodeing = this.dummyShapeProvider.getByUsingPanel();\r\n\r\n        this.diagram.add(myNodeing);\r\n\r\n        this.diagram.add(ghislain);\r\n\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(configService: ConfigService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: app\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { ConfigService } from './core/services/config-service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  \r\n  title = 'app';\r\n\r\n  \r\n  constructor(  private configService: ConfigService) {\r\n\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configService.setConfig();\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n  Components\n  HomeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/home/components/home.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.css\n            \n\n\n\n            \n                templateUrl\n                home.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(configService: ConfigService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             topologyUrl\n                        \n                    \n                    \n                        \n                            topologyUrl:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { ConfigService } from '../../core/services/config-service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  topologyUrl: string\r\n  constructor( private configService:ConfigService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.configService.getConfig_2().subscribe(value => this.topologyUrl= value.topologyUrl);\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeDescriptionComponent.html":{"url":"components/HomeDescriptionComponent.html","title":"component - HomeDescriptionComponent","body":"\n                   \n\n\n\n  Components\n  HomeDescriptionComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/home/components/description/home-description.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-description\n            \n\n            \n                styleUrls\n                home-description.component.css\n            \n\n\n\n            \n                templateUrl\n                home-description.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-home-description',\r\n    templateUrl: './home-description.component.html',\r\n    styleUrls: ['./home-description.component.css']\r\n})\r\nexport class HomeDescriptionComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        //  alert(\"HomeDescriptionComponent  init()\");\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutFooterComponent.html":{"url":"components/LayoutFooterComponent.html","title":"component - LayoutFooterComponent","body":"\n                   \n\n\n\n  Components\n  LayoutFooterComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/layout/components/footer/layout-footer.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-footer\n            \n\n            \n                styleUrls\n                layout-footer.component.css\n            \n\n\n\n            \n                templateUrl\n                layout-footer.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-layout-footer',\r\n    templateUrl: './layout-footer.component.html',\r\n    styleUrls: ['./layout-footer.component.css']\r\n})\r\nexport class LayoutFooterComponent implements OnInit {\r\n\r\n\r\n    ngOnInit() {\r\n        console.log(\"************ LayoutFooterComponent  init() \");\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutHeaderComponent.html":{"url":"components/LayoutHeaderComponent.html","title":"component - LayoutHeaderComponent","body":"\n                   \n\n\n\n  Components\n  LayoutHeaderComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/layout/components/header/layout-header.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-header\n            \n\n            \n                styleUrls\n                layout-header.component.css\n            \n\n\n\n            \n                templateUrl\n                layout-header.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-layout-header',\r\n    templateUrl: './layout-header.component.html',\r\n    styleUrls: ['./layout-header.component.css']\r\n})\r\nexport class LayoutHeaderComponent implements OnInit {\r\n\r\n\r\n    ngOnInit() {\r\n        console.log(\"************ LayoutHeaderComponent  init() \");\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutMainComponent.html":{"url":"components/LayoutMainComponent.html","title":"component - LayoutMainComponent","body":"\n                   \n\n\n\n  Components\n  LayoutMainComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/layout/components/main/layout-main.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-main\n            \n\n            \n                styleUrls\n                layout-main.component.css\n            \n\n\n\n            \n                templateUrl\n                layout-main.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Component({\r\n    selector: 'app-layout-main',\r\n    templateUrl: './layout-main.component.html',\r\n    styleUrls: ['./layout-main.component.css']\r\n})\r\nexport class LayoutMainComponent implements OnInit {\r\n\r\n\r\n    ngOnInit() {\r\n        console.log(\"************ LayoutMainComponent  init() \");\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutNaviComponent.html":{"url":"components/LayoutNaviComponent.html","title":"component - LayoutNaviComponent","body":"\n                   \n\n\n\n  Components\n  LayoutNaviComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/layout/components/navi/layout-navi.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-navi\n            \n\n            \n                styleUrls\n                layout-navi.component.css\n            \n\n\n\n            \n                templateUrl\n                layout-navi.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Component({\r\n    selector: 'app-layout-navi',\r\n    templateUrl: './layout-navi.component.html',\r\n    styleUrls: ['./layout-navi.component.css']\r\n})\r\nexport class LayoutNaviComponent implements OnInit {\r\n\r\n\r\n    ngOnInit() {\r\n        console.log(\"************ LayoutNaviComponent  init() \");\r\n    }\r\n\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n  Components\n  OutputComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/output/output.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-output\n            \n\n            \n                styleUrls\n                output.component.css\n            \n\n\n\n            \n                templateUrl\n                output.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(outputService: OutputService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             outputList\n                        \n                    \n                    \n                        \n                            outputList:     string[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { OutputService } from './services/output.service';\r\n\r\n@Component({\r\n  selector: 'app-output',\r\n  templateUrl: './output.component.html',\r\n  styleUrls: ['./output.component.css']\r\n})\r\nexport class OutputComponent implements OnInit {\r\n\r\n  outputList: string [];\r\n  constructor(private outputService: OutputService) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.outputList= this.outputService.getAll();\r\n    console.info(this.outputList);\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopologyDetailComponent.html":{"url":"components/TopologyDetailComponent.html","title":"component - TopologyDetailComponent","body":"\n                   \n\n\n\n  Components\n  TopologyDetailComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/topology/components/topology-detail/topology-detail.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topology-detail\n            \n\n            \n                styleUrls\n                topology-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                topology-detail.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(route: ActivatedRoute, router: Router, messageService: MessageService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             cancel\n                        \n                    \n    \n                    \n                        \n    cancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             canDeactivate\n                        \n                    \n    \n                    \n                        \n    canDeactivate()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean | Observable\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             gotoCrises\n                        \n                    \n    \n                    \n                        \n    gotoCrises()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             editName\n                        \n                    \n                    \n                        \n                            editName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             messageService\n                        \n                    \n                    \n                        \n                            messageService:     MessageService\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             topology\n                        \n                    \n                    \n                        \n                            topology:     Topology\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Topology } from '../../../core/models/topology';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n \r\n\r\n \r\n@Component({\r\n  selector: 'app-topology-detail',\r\n  templateUrl: './topology-detail.component.html',\r\n  styleUrls: ['./topology-detail.component.css']\r\n})\r\nexport class TopologyDetailComponent implements OnInit {\r\n  \r\n \r\n\r\n  topology: Topology;\r\n  editName: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data\r\n      .subscribe((data: { topology: Topology }) => {\r\n        this.editName = data.topology.name;\r\n        this.topology = data.topology;\r\n      });\r\n  }\r\n\r\n  cancel() {\r\n    this.gotoCrises();\r\n  }\r\n\r\n  save() {\r\n    this.topology.name = this.editName;\r\n    this.gotoCrises();\r\n  }\r\n\r\n  canDeactivate(): Observable | boolean {\r\n    // Allow synchronous navigation (`true`) if no crisis or the crisis is unchanged\r\n    if (!this.topology || this.topology.name === this.editName) {\r\n      return true;\r\n    }\r\n    // Otherwise ask the user with the dialog service and return its\r\n    // observable which resolves to true or false when the user decides\r\n    this.messageService.add('Discard changes?');\r\n    return Observable.of(true);\r\n  }\r\n\r\n  gotoCrises() {\r\n    let crisisId = this.topology ? this.topology.id : null;\r\n  \r\n    this.router.navigate(['../', { id: crisisId, foo: 'foo' }], { relativeTo: this.route });\r\n  }\r\n}\r\n\r\n\r\n \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopologyHomeComponent.html":{"url":"components/TopologyHomeComponent.html","title":"component - TopologyHomeComponent","body":"\n                   \n\n\n\n  Components\n  TopologyHomeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/topology/components/topology-home/topology-home.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topology-home\n            \n\n            \n                styleUrls\n                topology-home.component.css\n            \n\n\n\n            \n                templateUrl\n                topology-home.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-topology-home',\r\n  templateUrl: './topology-home.component.html',\r\n  styleUrls: ['./topology-home.component.css']\r\n})\r\nexport class TopologyHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n     console.log(\"TopologyHomeComponent***********  1\");\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopologyListComponent.html":{"url":"components/TopologyListComponent.html","title":"component - TopologyListComponent","body":"\n                   \n\n\n\n  Components\n  TopologyListComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/topology/components/topology-list/topology-list.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topology-list\n            \n\n            \n                styleUrls\n                topology-list.component.css\n            \n\n\n\n            \n                templateUrl\n                topology-list.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(topologyService: TopologyService, route: ActivatedRoute)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             selectedId\n                        \n                    \n                    \n                        \n                            selectedId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             topologies$\n                        \n                    \n                    \n                        \n                            topologies$:     Observable\n    \n                        \n                    \n                \n            \n    \n\n        \n            import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Topology } from '../../../core/models/topology';\r\nimport { TopologyService } from '../../../core/services/topology.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-topology-list',\r\n  templateUrl: './topology-list.component.html',\r\n  styleUrls: ['./topology-list.component.css']\r\n})\r\nexport class TopologyListComponent implements OnInit {\r\n  topologies$: Observable;\r\n  selectedId: number;\r\n\r\n  constructor(\r\n    private topologyService: TopologyService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"TopologyHomeComponent***********  2\");\r\n    this.topologies$ = this.route.paramMap\r\n      .switchMap((params: ParamMap) => {\r\n        this.selectedId = +params.get('id');\r\n        return this.topologyService.getTopologies();\r\n      });\r\n  }\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopologyWorkerComponent.html":{"url":"components/TopologyWorkerComponent.html","title":"component - TopologyWorkerComponent","body":"\n                   \n\n\n\n  Components\n  TopologyWorkerComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/topology/components/topology-worker/topology-worker.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topology-worker\n            \n\n            \n                styleUrls\n                topology-worker.component.css\n            \n\n\n\n            \n                templateUrl\n                topology-worker.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(route: ActivatedRoute, router: Router, messageService: MessageService, topologyService: TopologyService, linkTemplateService: LinkTemplateService, nodeTemplateService: NodeTemplateService, diagramService: DiagramService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Private initData\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            initData()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             showT\n                        \n                    \n    \n                    \n                        \n    showT()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cancel\n                        \n                    \n    \n                    \n                        \n    cancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             save\n                        \n                    \n    \n                    \n                        \n    save()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cut\n                        \n                    \n    \n                    \n                        \n    cut()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             canDeactivate\n                        \n                    \n    \n                    \n                        \n    canDeactivate()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean | Observable\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             gotoTologies\n                        \n                    \n    \n                    \n                        \n    gotoTologies()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             diagram\n                        \n                    \n                    \n                        \n                            diagram:     Diagram\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             diagramDiv\n                        \n                    \n                    \n                        \n                            diagramDiv:     ElementRef\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             editName\n                        \n                    \n                    \n                        \n                            editName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             messageService\n                        \n                    \n                    \n                        \n                            messageService:     MessageService\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedId\n                        \n                    \n                    \n                        \n                            selectedId:     string | number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             topology\n                        \n                    \n                    \n                        \n                            topology:     Topology\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             topology$\n                        \n                    \n                    \n                        \n                            topology$:     Observable\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             topologyJson\n                        \n                    \n                    \n                        \n                            topologyJson:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Topology, NodeDataArray } from '../../../core/models/topology';\r\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n\r\nimport * as go from 'gojs'\r\nimport { LinkTemplateService } from '../../../core/utils/link-template.service';\r\nimport { NodeTemplateService, SHAPE_TYPE } from '../../../core/utils/node-template.service';\r\nimport { DiagramService } from '../../../core/utils/diagram.service';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { TopologyService } from '../../../core/services/topology.service';\r\n\r\n@Component({\r\n  selector: 'app-topology-worker',\r\n  templateUrl: './topology-worker.component.html',\r\n  styleUrls: ['./topology-worker.component.css']\r\n})\r\nexport class TopologyWorkerComponent implements OnInit {\r\n  topology: Topology;\r\n  topology$: Observable;\r\n  editName: string;\r\n  selectedId: string | number;\r\n  topologyJson: string;\r\n\r\n  @ViewChild('myDiagramDiv')\r\n  diagramDiv: ElementRef;\r\n\r\n  diagram: go.Diagram;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public messageService: MessageService,\r\n    private topologyService: TopologyService,\r\n    private linkTemplateService: LinkTemplateService,\r\n    private nodeTemplateService: NodeTemplateService,\r\n    private diagramService: DiagramService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.topology$ = this.route.paramMap.switchMap((params: ParamMap) =>\r\n      this.topologyService.getTopology(params.get('id')));\r\n\r\n    //dojob Diagram template\r\n    var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n    this.diagram = $(go.Diagram, this.diagramDiv.nativeElement);\r\n    this.diagram.initialContentAlignment = go.Spot.Center;  // center the content\r\n    this.diagram.undoManager.isEnabled = true;\r\n    this.diagram.padding = new go.Margin(5, 5, 25, 5);\r\n    this.diagram.layout = $(go.GridLayout);\r\n\r\n    //dojob for template Node\r\n    this.diagram.nodeTemplate = this.nodeTemplateService.getNodeTemplate_1();\r\n\r\n    //dojob for template Links\r\n    this.diagram.linkTemplate = this.linkTemplateService.getLinkTemplate();\r\n\r\n\r\n    //set up model\r\n    this.topology$.subscribe(topo => {\r\n      this.topology = topo;\r\n      this.topologyJson = JSON.stringify(this.topology);\r\n      this.initData();\r\n    })\r\n\r\n    //Route gives the selected id;\r\n    //  this.route.data.subscribe((data: { topology: Topology }) => {\r\n    //    this.editName = \"data.topology.name\";\r\n    //    this.topology = data.topology;\r\n    //     this.topologyJson = JSON.stringify(this.topology);\r\n    //    this.usingPanels();\r\n    // });\r\n  }\r\n\r\n  private initData() {\r\n\r\n    //alert(this.topologyJson);\r\n    console.log(this.topologyJson);\r\n    let linkDataArray = this.topology.linkDataArray;\r\n    let nodeDataArray = this.topology.nodeDataArray;\r\n    let graphLinksModel = new go.GraphLinksModel(nodeDataArray, linkDataArray);\r\n    graphLinksModel.linkFromPortIdProperty = \"fromPort\";\r\n    graphLinksModel.linkToPortIdProperty = \"toPort\";\r\n    this.diagram.model = graphLinksModel;\r\n  }\r\n\r\n  showT() {\r\n    return \"XXXXXXXXXXXXXXXX\";\r\n  }\r\n\r\n  cancel() {\r\n\r\n  }\r\n\r\n  save() {\r\n  }\r\n\r\n  ///handle any gut action for any obeect\r\n  cut() {\r\n\r\n    console.log(\"cut........\");\r\n\r\n    this.diagram.commandHandler.cutSelection();\r\n  }\r\n\r\n  canDeactivate(): Observable | boolean {\r\n    // Allow synchronous navigation (`true`) if no crisis or the crisis is unchanged\r\n    if (!this.topology || this.topology.name === this.editName) {\r\n      return true;\r\n    }\r\n    // Otherwise ask the user with the dialog service and return its\r\n    // observable which resolves to true or false when the user decides\r\n    this.messageService.add('Discard changes?');\r\n    return Observable.of(true);\r\n  }\r\n\r\n  gotoTologies() {\r\n    let crisisId = this.topology ? this.topology.id : null;\r\n\r\n    this.router.navigate(['../', { id: crisisId, foo: 'foo' }], { relativeTo: this.route });\r\n  }\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guard/can-deactivate-guard.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canDeactivate\n                                \n                            \n            \n                            \n                                \n            canDeactivate(component: CanComponentDeactivate)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable }    from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable }    from 'rxjs/Observable';\r\n\r\nexport interface CanComponentDeactivate {\r\n canDeactivate: () => Observable | Promise | boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class CanDeactivateGuard implements CanDeactivate {\r\n  canDeactivate(component: CanComponentDeactivate) {\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config-service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(httpClient: HttpClient, httpErrorHandler: HttpErrorHandler)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setConfig\n                                \n                            \n            \n                            \n                                \n            setConfig()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfig\n                                \n                            \n            \n                            \n                                \n            getConfig()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfig_1\n                                \n                            \n            \n                            \n                                \n            getConfig_1()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfig_2\n                                \n                            \n            \n                            \n                                \n            getConfig_2()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfig_3\n                                \n                            \n            \n                            \n                                \n            getConfig_3()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getConfigResponse\n                                \n                            \n            \n                            \n                                \n            getConfigResponse()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable>\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     config\n                                \n                            \n                            \n                                \n                                    config:     Config\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     configUrl\n                                \n                            \n                            \n                                \n                                    configUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: ../assets/config.json\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private handleError\n                                \n                            \n                            \n                                \n                                    handleError:     HandleError\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Config } from '../models/config';\r\nimport { HttpErrorHandler, HandleError } from './http-error-handler.service';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n\r\n  configUrl = '../assets/config.json';\r\n  config:Config;\r\n\r\n  private handleError: HandleError;\r\n \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n   private httpErrorHandler: HttpErrorHandler) {\r\n\r\n    this.handleError = httpErrorHandler.createHandleError('ConfigService');\r\n    this.getConfig_2().subscribe(value => this.config= value,eooro=> {}, () => { });\r\n  }\r\n\r\n  setConfig() {\r\n    this.getConfig_2().subscribe(value => this.config= value);\r\n    }\r\n \r\n\r\n  getConfig() {\r\n    console.info(\"getConfig calls ******************\");\r\n    return this.httpClient.get(this.configUrl)\r\n      .pipe(\r\n        retry(3), // retry a failed request up to 3 times\r\n        catchError(this.handleError ('getConfig', [])) // then handle the error\r\n      );\r\n  }\r\n\r\n  getConfig_1() {\r\n    return this.httpClient.get(this.configUrl);\r\n  }\r\n\r\n  getConfig_2() {\r\n    // now returns an Observable of Config\r\n    return this.httpClient.get(this.configUrl);\r\n  }\r\n\r\n  getConfig_3() {\r\n    return this.httpClient.get(this.configUrl)\r\n      .pipe(\r\n        catchError(this.handleError ('getConfig_3', [])) // then handle the error\r\n      );\r\n  }\r\n\r\n  getConfigResponse(): Observable> {\r\n    return this.httpClient.get(\r\n      this.configUrl, { observe: 'response' });\r\n  }\r\n  \r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiagramService.html":{"url":"injectables/DiagramService.html","title":"injectable - DiagramService","body":"\n                   \n\n\n\n\n\n  Injectables\n  DiagramService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/diagram.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     layout\n                                \n                            \n            \n                            \n                                \n            layout(myDiagram: Diagram)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createArrayData\n                                \n                            \n            \n                            \n                                \n            createArrayData(total: number, numberGateWay: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private createNodePortArray\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createNodePortArray(total: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     enable\n                                \n                            \n            \n                            \n                                \n            enable(name: any, ok: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     enableAll\n                                \n                            \n            \n                            \n                                \n            enableAll(diagram: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@angular/core\";\r\n\r\nimport * as go from 'gojs';\r\n\r\n\r\n@Injectable()\r\nexport class DiagramService {\r\n\r\n      layout(myDiagram: go.Diagram) {\r\n    myDiagram.startTransaction(\"change Layout\");\r\n    var lay = myDiagram.layout;\r\n      }\r\n\r\n   // create an array of data describing randomly colored and sized nodes\r\n   createArrayData(total :number,numberGateWay?:number){\r\n    var nodeDataArray = [];\r\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DummyNodeTemplateProvider.html":{"url":"injectables/DummyNodeTemplateProvider.html","title":"injectable - DummyNodeTemplateProvider","body":"\n                   \n\n\n\n\n\n  Injectables\n  DummyNodeTemplateProvider\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/services/dummy-node-template.provider.ts\n        \n\n            \n                Description\n            \n            \n                Async modal dialog serviceDialogService makes this app easier to test by faking this service.SEE : https://gojs.net/latest/intro/shapes.html\n\n            \n\n\n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\nimport * as go from 'gojs';\r\nimport { Shape } from 'gojs';\r\n/**\r\n * Async modal dialog service\r\n * DialogService makes this app easier to test by faking this service.\r\n * SEE : https://gojs.net/latest/intro/shapes.html\r\n */\r\n@Injectable()\r\nexport class DummyNodeTemplateProvider {\r\n\r\n\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DummyShapeProvider.html":{"url":"injectables/DummyShapeProvider.html","title":"injectable - DummyShapeProvider","body":"\n                   \n\n\n\n\n\n  Injectables\n  DummyShapeProvider\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/services/dummy.shape.provider.ts\n        \n\n            \n                Description\n            \n            \n                Async modal dialog serviceDialogService makes this app easier to test by faking this service.SEE : https://gojs.net/latest/intro/shapes.html\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getShapeByFigure\n                                \n                            \n            \n                            \n                                \n            getShapeByFigure(figureName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Shape\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAllShapeByFigure\n                                \n                            \n            \n                            \n                                \n            getAllShapeByFigure()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Part\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getByUsingPanel\n                                \n                            \n            \n                            \n                                \n            getByUsingPanel()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Part\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\nimport * as go from 'gojs';\r\nimport { Shape } from 'gojs';\r\n/**\r\n * Async modal dialog service\r\n * DialogService makes this app easier to test by faking this service.\r\n * SEE : https://gojs.net/latest/intro/shapes.html\r\n */\r\n@Injectable()\r\nexport class DummyShapeProvider {\r\n\r\n\r\n    getShapeByFigure(figureName: string): Shape {\r\n        var $ = go.GraphObject.make;  // for conciseness in defining GraphObjects\r\n\r\n        const shapeToReturn = $(go.Shape, figureName, { fill: \"lightgreen\" });\r\n        return shapeToReturn;\r\n    }\r\n\r\n    getAllShapeByFigure(): go.Part {\r\n        var $ = go.GraphObject.make;  // for conciseness in defining GraphObjects\r\n        var stackpanel = $(go.Part, \"Horizontal\",\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4\r\n            }),  // default fill and stroke are \"black\"\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: \"green\"\r\n            }),\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: \"green\", stroke: null\r\n            }),\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: null, stroke: \"green\"\r\n            }),\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: null, stroke: \"green\", strokeWidth: 3\r\n            }),\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: null, stroke: \"green\", strokeWidth: 6\r\n            }),\r\n            $(go.Shape, {\r\n                figure: \"Club\", width: 40, height: 40, margin: 4,\r\n                fill: \"green\", background: \"orange\"\r\n            }));\r\n        return stackpanel;\r\n    }\r\n\r\n    getByUsingPanel(): go.Part {\r\n        var $ = go.GraphObject.make;\r\n        var myNode = $(go.Part, \"Horizontal\", { width: 200, height: 100 },\r\n            $(go.Shape, { width: 40, fill: \"yellow\" }));\r\n        return myNode;\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpErrorHandler.html":{"url":"injectables/HttpErrorHandler.html","title":"injectable - HttpErrorHandler","body":"\n                   \n\n\n\n\n\n  Injectables\n  HttpErrorHandler\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http-error-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles HttpClient errors \n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(messageService: MessageService, loggingService: LoggingService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     handleError\n                                \n                            \n            \n                            \n                                \n            handleError(serviceName: string, operation: string, result: T)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     createHandleError\n                                \n                            \n                            \n                                \n                                    createHandleError:     (serviceName?: string) => (operation?: string, result?: T) => (error: HttpErrorResponse) => Ob...\n            \n                                \n                            \n                            \n                                \n                                    Create curried handleError function that already knows the service name \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { MessageService } from './message.service';\r\nimport { LoggingService } from './logging.service';\r\n\r\n/** Type of the handleError function returned by HttpErrorHandler.createHandleError */\r\nexport type HandleError =   (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n  constructor(private messageService: MessageService,  private loggingService: LoggingService) { }\r\n\r\n  /** Create curried handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => \r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n \r\n  handleError (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable => {\r\n     \r\n      this.loggingService.error(error);\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `server returned code ${error.status} with body \"${error.error}\"`;\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.messageService.add(`${serviceName}: ${operation} failed: ${message}`);\r\n\r\n      // Let the app keep running by returning a safe result.\r\n      return of( result );\r\n    };\r\n\r\n  }\r\n}\r\n\r\n\r\n \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkDataService.html":{"url":"injectables/LinkDataService.html","title":"injectable - LinkDataService","body":"\n                   \n\n\n\n\n\n  Injectables\n  LinkDataService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/services/link-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Async modal dialog serviceDialogService makes this app easier to test by faking this service.SEE : https://gojs.net/latest/intro/shapes.html\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getLinkDataArray\n                                \n                            \n            \n                            \n                                \n            getLinkDataArray()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\nimport * as go from 'gojs';\r\nimport { Shape } from 'gojs';\r\n/**\r\n * Async modal dialog service\r\n * DialogService makes this app easier to test by faking this service.\r\n * SEE : https://gojs.net/latest/intro/shapes.html\r\n */\r\n@Injectable()\r\nexport class LinkDataService {\r\n\r\n    getLinkDataArray(): any[] {\r\n        var linkDataArray = [\r\n            { from: \"Alpha\", to: \"Beta\" }\r\n        ];\r\n\r\n        return linkDataArray\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkTemplateService.html":{"url":"injectables/LinkTemplateService.html","title":"injectable - LinkTemplateService","body":"\n                   \n\n\n\n\n\n  Injectables\n  LinkTemplateService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/link-template.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public getLinkTemplate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getLinkTemplate()\n                                \n                            \n            \n                            \n                                \n                                        an orthogonal link template, reshapable and relinkable *\n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getLinkTemplate_1\n                                \n                            \n            \n                            \n                                \n            getLinkTemplate_1()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@angular/core\";\r\n\r\nimport * as go from 'gojs';\r\nimport { CustomLink } from \"./custom-link\";\r\n\r\n\r\n@Injectable()\r\nexport class LinkTemplateService {\r\n\r\n\r\n    /** an orthogonal link template, reshapable and relinkable **/\r\n    public getLinkTemplate(): any {\r\n        const $ = go.GraphObject.make;\r\n        let linkTemplate = $(CustomLink,  // defined below\r\n            {\r\n                routing: go.Link.AvoidsNodes,\r\n                corner: 4,\r\n                curve: go.Link.JumpGap,\r\n                reshapable: true,\r\n                resegmentable: true,\r\n                relinkableFrom: true,\r\n                relinkableTo: true\r\n            },\r\n            new go.Binding(\"points\").makeTwoWay(),\r\n            $(go.Shape, { stroke: \"#2F4F4F\", strokeWidth: 2 })\r\n        );\r\n        return linkTemplate;\r\n    }\r\n\r\n    getLinkTemplate_1() {\r\n        const $ = go.GraphObject.make;\r\n        var linkTemplate =\r\n            $(go.Link,\r\n                $(go.Shape,\r\n                    new go.Binding(\"stroke\", \"color\"),  // shape.stroke = data.color\r\n                    new go.Binding(\"strokeWidth\", \"thick\")),  // shape.strokeWidth = data.thick\r\n                $(go.Shape,\r\n                    { toArrow: \"OpenTriangle\", fill: null },\r\n                    new go.Binding(\"stroke\", \"color\"),  // shape.stroke = data.color\r\n                    new go.Binding(\"strokeWidth\", \"thick\"))  // shape.strokeWidth = data.thick\r\n            );\r\n        return linkTemplate;\r\n\r\n\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingService.html":{"url":"injectables/LoggingService.html","title":"injectable - LoggingService","body":"\n                   \n\n\n\n\n\n  Injectables\n  LoggingService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logging.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n            \n                            \n                                \n            clear()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     error\n                                \n                            \n            \n                            \n                                \n            error(error: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     logs\n                                \n                            \n                            \n                                \n                                    logs:     string[]\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoggingService {\r\n\r\n  logs: string[] = [];\r\n\r\n  clear() {\r\n  this.logs = [];\r\n  }\r\n\r\n  error(error: any) {\r\n    console.error(error); // log to console  \r\n    this.logs.push(error);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/message.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     add\n                                \n                            \n            \n                            \n                                \n            add(message: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n            \n                            \n                                \n            clear()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     messages\n                                \n                            \n                            \n                                \n                                    messages:     string[]\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodeDataService.html":{"url":"injectables/NodeDataService.html","title":"injectable - NodeDataService","body":"\n                   \n\n\n\n\n\n  Injectables\n  NodeDataService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/about/services/node-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Async modal dialog serviceDialogService makes this app easier to test by faking this service.SEE : https://gojs.net/latest/intro/shapes.html\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getNodeDataArray\n                                \n                            \n            \n                            \n                                \n            getNodeDataArray()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\nimport * as go from 'gojs';\r\nimport { Shape } from 'gojs';\r\n/**\r\n * Async modal dialog service\r\n * DialogService makes this app easier to test by faking this service.\r\n * SEE : https://gojs.net/latest/intro/shapes.html\r\n */\r\n@Injectable()\r\nexport class NodeDataService {\r\n\r\n    getNodeDataArray(): any[] {\r\n        var nodeDataArray = [\r\n            { key: \"Alpha\" },\r\n            { key: \"Beta\" }\r\n        ];\r\n\r\n        return nodeDataArray\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodeTemplateService.html":{"url":"injectables/NodeTemplateService.html","title":"injectable - NodeTemplateService","body":"\n                   \n\n\n\n\n\n  Injectables\n  NodeTemplateService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/node-template.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getNodeTemplate_1\n                                \n                            \n            \n                            \n                                \n            getNodeTemplate_1()\n                                \n                            \n            \n                            \n                                \n                                        Template using  Table with bar(buttons e.g Expander) , Picture,Name, and Port place \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNodeTemplate_2\n                                \n                            \n            \n                            \n                                \n            getNodeTemplate_2()\n                                \n                            \n            \n                            \n                                \n                                        Template als Table title , Pic and Name, Port place , Port with Dash | \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNodeTemplate_3\n                                \n                            \n            \n                            \n                                \n            getNodeTemplate_3()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNodeTemplate_4\n                                \n                            \n            \n                            \n                                \n            getNodeTemplate_4()\n                                \n                            \n            \n                            \n                                \n                                        Hast expander  \n            \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNodeTemplate_11\n                                \n                            \n            \n                            \n                                \n            getNodeTemplate_11()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getUpPortMenu\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getUpPortMenu()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     makeButton\n                                \n                            \n            \n                            \n                                \n            makeButton(text: any, action: any, visiblePredicate: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private makeItemTemplate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    makeItemTemplate(leftside: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@angular/core\";\r\n\r\nimport * as go from 'gojs';\r\n\r\n\r\n//Type of shape ...\r\nexport const SHAPE_TYPE: string[] = [\"RoundedRectangle\",\r\n    \"Ellipse\",\r\n    \"Hexagon\",\r\n    \"Cloud\",\r\n    \"Procedure\",\r\n];\r\n\r\n\r\n@Injectable()\r\nexport class NodeTemplateService {\r\n \r\n\r\n    /**Template using  Table with bar(buttons e.g Expander) , Picture,Name, and Port place */\r\n    getNodeTemplate_1(): any {\r\n        var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n        var portSize = new go.Size(15, 8);\r\n        var deviceSize = new go.Size(200, 100);\r\n        var imageSize = new go.Size(150, 65);\r\n        \r\n        //Expander if Gayway should be visible\r\n        var treeExpanderButton = $(go.Panel, { height: 15 }, new go.Binding(\"visible\", \"type\", (a, b) => {\r\n            if (a == \"2\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }), $(\"TreeExpanderButton\", ));\r\n\r\n\r\n        const nodeTemplate =\r\n            $(go.Node, \"Vertical\",\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", { fill: null, desiredSize: deviceSize }),\r\n\r\n                    $(go.Panel, \"Table\",\r\n                        treeExpanderButton,\r\n                        $(go.Picture, { row: 1, desiredSize: imageSize }, new go.Binding(\"source\", \"img\")),\r\n                        $(go.TextBlock, { row: 2 }, new go.Binding(\"text\", \"name\")))),\r\n                $(go.Panel, \"Horizontal\",\r\n                    new go.Binding(\"itemArray\", \"bottomArray\"),\r\n                    {\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"bottom\",\r\n                                    fromSpot: go.Spot.Bottom,\r\n                                    toSpot: go.Spot.Bottom,\r\n                                    fromLinkable: true,\r\n                                    toLinkable: true,\r\n                                    cursor: \"pointer\",\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(0, 1)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            )  // end itemTemplate\r\n                    }\r\n                ));\r\n        return nodeTemplate;\r\n    }\r\n\r\n    /**Template als Table title , Pic and Name, Port place , Port with Dash | */\r\n    getNodeTemplate_2(): any {\r\n        var $ = go.GraphObject.make;  // for conciseness in defining templates\r\n        var portSize = new go.Size(15, 8);\r\n        var deviceSize = new go.Size(200, 100);\r\n        var imageSize = new go.Size(150, 65);\r\n        const nodeTemplate =\r\n            $(go.Node, \"Vertical\",\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", { fill: null, desiredSize: deviceSize }),\r\n\r\n                    $(go.Panel, \"Table\",\r\n                        $(go.TextBlock, { row: 0 }, new go.Binding(\"text\", \"type\")),\r\n                        $(go.Picture, { row: 1, desiredSize: imageSize }, new go.Binding(\"source\", \"img\")),\r\n                        $(go.TextBlock, { row: 2 }, new go.Binding(\"text\", \"name\")))),\r\n                $(go.Panel, \"Horizontal\",\r\n                    new go.Binding(\"itemArray\", \"bottomArray\"),\r\n                    {\r\n                        itemTemplate:\r\n                            $(go.Panel, \"Vertical\",\r\n                                {\r\n                                    _side: \"bottom\",\r\n                                    name: \"COLLAPSIBLE\",\r\n                                    fromSpot: go.Spot.Bottom,\r\n                                    toSpot: go.Spot.Bottom,\r\n                                    fromLinkable: true,\r\n                                    toLinkable: true,\r\n                                    cursor: \"pointer\",\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\", {\r\n                                    stroke: null, strokeWidth: 0,\r\n                                    desiredSize: new go.Size(2, 20),\r\n                                    margin: new go.Margin(0, 1)\r\n                                }),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(0, 1)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            )  // end itemTemplate\r\n                    }\r\n                ));\r\n        return nodeTemplate;\r\n    }\r\n\r\n\r\n\r\n\r\n    getNodeTemplate_3() {\r\n        const $ = go.GraphObject.make;\r\n        var d = $(go.Node, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\", new go.Binding(\"fill\", \"color\")),  // shape.fill = data.color\r\n            $(go.TextBlock, { margin: 5 }, new go.Binding(\"text\", \"key\"))  // textblock.text = data.key\r\n        );\r\n        return d;\r\n\r\n    }\r\n\r\n\r\n    /** Hast expander  */\r\n    getNodeTemplate_4(): any {\r\n        const $ = go.GraphObject.make;\r\n        var portMenu = this.getUpPortMenu();\r\n        var portSize = new go.Size(15, 8);\r\n        var treeExpanderButton = $(go.Panel, { height: 15 }, $(\"TreeExpanderButton\"));\r\n\r\n        // the node template\r\n        // includes a panel on each side with an itemArray of panels containing ports\r\n        var nodeTemplate =\r\n            $(go.Node, \"Table\", {\r\n                width: 150, height: 100,\r\n                locationObjectName: \"BODY\",\r\n                locationSpot: go.Spot.Center,\r\n                selectionObjectName: \"BODY\"\r\n                // contextMenu: nodeMenu\r\n            },\r\n                { defaultAlignment: go.Spot.Center },\r\n                $(go.RowColumnDefinition, { column: 0, width: 150, height: 150 }),//image\r\n                $(go.RowColumnDefinition, { column: 1, width: 150, height: 50 }),//text\r\n\r\n                // the body\r\n                $(go.Panel, \"Table\",\r\n                    { defaultAlignment: go.Spot.Left },\r\n                    $(go.RowColumnDefinition, { column: 0, width: 150, height: 50 }),//image\r\n                    $(go.RowColumnDefinition, { column: 1, width: 100, height: 50 }),//text\r\n                    {\r\n                        row: 0,\r\n                        column: 0,\r\n                        background: \"green\",\r\n                        name: \"BODY\",\r\n                        stretch: go.GraphObject.Fill\r\n                    },\r\n                    $(go.TextBlock, { row: 0 }, new go.Binding(\"text\", \"img\")),\r\n                    $(go.TextBlock,\r\n                        { background: \"yellow\", row: 1, margin: 10, textAlign: \"center\", font: \"14px Segoe UI,sans-serif\", stroke: \"white\", editable: true },\r\n                        new go.Binding(\"text\", \"name\").makeTwoWay())\r\n                ), // end Auto Panel body      \r\n\r\n\r\n                // the Panel holding the bottom port elements, which are themselves Panels,\r\n                // created for each item in the itemArray, bound to data.bottomArray\r\n                $(go.Panel, \"Horizontal\", { background: \"black\", row: 1, column: 1 },\r\n                    new go.Binding(\"itemArray\", \"bottomArray\"),\r\n                    {\r\n                        row: 1, column: 1,\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"bottom\",\r\n                                    fromSpot: go.Spot.Bottom, toSpot: go.Spot.Bottom,\r\n                                    fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(0, 1)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            ) // end itemTemplate\r\n                    }\r\n                ) // end Horizontal Panel\r\n\r\n            ); // end Node\r\n\r\n        return nodeTemplate;\r\n    }\r\n\r\n\r\n    getNodeTemplate_11(): any {\r\n        const $ = go.GraphObject.make;\r\n        var portSize = new go.Size(8, 10);\r\n        var portMenu = this.getUpPortMenu();\r\n        var portSize = new go.Size(15, 8);\r\n\r\n        var treeExpanderButton = $(go.Panel, { height: 15 }, $(\"TreeExpanderButton\"));\r\n        // the node template\r\n        // includes a panel on each side with an itemArray of panels containing ports\r\n        var nodeTemplate =\r\n            $(go.Node, \"Table\",\r\n                {\r\n                    locationObjectName: \"BODY\",\r\n                    locationSpot: go.Spot.Center,\r\n                    selectionObjectName: \"BODY\"\r\n                    // contextMenu: nodeMenu\r\n                },\r\n                new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                // the body\r\n                $(go.Panel, \"Auto\",\r\n                    {\r\n                        row: 1, column: 1, name: \"BODY\",\r\n                        stretch: go.GraphObject.Fill\r\n                    },\r\n                    $(go.Shape, \"RoundedRectangle\",\r\n                        {\r\n                            fill: \"#369\", stroke: null, strokeWidth: 0,\r\n                            minSize: new go.Size(156, 70)\r\n                        }),\r\n                    $(go.TextBlock,\r\n                        { margin: 10, textAlign: \"center\", font: \"14px Segoe UI,sans-serif\", stroke: \"white\", editable: true },\r\n                        new go.Binding(\"text\", \"name\").makeTwoWay())\r\n                ), // end Auto Panel body\r\n\r\n                // the Panel holding the left port elements, which are themselves Panels,\r\n                // created for each item in the itemArray, bound to data.leftArray\r\n                $(go.Panel, \"Vertical\",\r\n                    new go.Binding(\"itemArray\", \"leftArray\"),\r\n                    {\r\n                        row: 1, column: 0,\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"left\", // internal property to make it easier to tell which side it's on\r\n                                    fromSpot: go.Spot.Left, toSpot: go.Spot.Left,\r\n                                    fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                                    contextMenu: portMenu\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(1, 0)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            ) // end itemTemplate\r\n                    }, treeExpanderButton\r\n                ), // end Vertical Panel\r\n                // the Panel holding the top port elements, which are themselves Panels,\r\n                // created for each item in the itemArray, bound to data.topArray\r\n                $(go.Panel, \"Horizontal\",\r\n                    new go.Binding(\"itemArray\", \"topArray\"),\r\n                    {\r\n                        row: 0, column: 1,\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"top\",\r\n                                    fromSpot: go.Spot.Top, toSpot: go.Spot.Top,\r\n                                    fromLinkable: true, toLinkable: true, cursor: \"pointer\"\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(0, 1)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            ) // end itemTemplate\r\n                    }\r\n                ), // end Horizontal Panel\r\n                // the Panel holding the right port elements, which are themselves Panels,\r\n                // created for each item in the itemArray, bound to data.rightArray\r\n                $(go.Panel, \"Vertical\",\r\n                    new go.Binding(\"itemArray\", \"rightArray\"),\r\n                    {\r\n                        row: 1, column: 2,\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"right\",\r\n                                    fromSpot: go.Spot.Right, toSpot: go.Spot.Right,\r\n                                    fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(1, 0)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            ) // end itemTemplate\r\n                    }\r\n                ), // end Vertical Panel\r\n                // the Panel holding the bottom port elements, which are themselves Panels,\r\n                // created for each item in the itemArray, bound to data.bottomArray\r\n                $(go.Panel, \"Horizontal\",\r\n                    new go.Binding(\"itemArray\", \"bottomArray\"),\r\n                    {\r\n                        row: 2, column: 1,\r\n                        itemTemplate:\r\n                            $(go.Panel,\r\n                                {\r\n                                    _side: \"bottom\",\r\n                                    fromSpot: go.Spot.Bottom, toSpot: go.Spot.Bottom,\r\n                                    fromLinkable: true, toLinkable: true, cursor: \"pointer\",\r\n                                },\r\n                                new go.Binding(\"portId\", \"portId\"),\r\n                                $(go.Shape, \"Rectangle\",\r\n                                    {\r\n                                        stroke: null, strokeWidth: 0,\r\n                                        desiredSize: portSize,\r\n                                        margin: new go.Margin(0, 1)\r\n                                    },\r\n                                    new go.Binding(\"fill\", \"portColor\"))\r\n                            ) // end itemTemplate\r\n                    }\r\n                ) // end Horizontal Panel\r\n\r\n            ); // end Node\r\n\r\n        return nodeTemplate;\r\n    }\r\n\r\n\r\n    //create a port menu!!!\r\n    private getUpPortMenu(): any {\r\n        const $ = go.GraphObject.make;\r\n        var portMenu =  // context menu for each port\r\n            $(go.Adornment, \"Vertical\",\r\n                this.makeButton(\"Swap order\", function (e, obj) { this.swapOrder(obj.part.adornedObject); }, null),\r\n                this.makeButton(\"Change color\", function (e, obj) { this.changeColor(obj.part.adornedObject); }, null)\r\n            );\r\n    }\r\n\r\n    makeButton(text, action, visiblePredicate) {\r\n        const $ = go.GraphObject.make;\r\n        var toReturn = $(\"ContextMenuButton\",\r\n            $(go.TextBlock, text),\r\n            { click: action },\r\n            // don't bother with binding GraphObject.visible if there's no predicate\r\n            visiblePredicate ? new go.Binding(\"visible\", \"\", function (o, e) { return o.diagram ? visiblePredicate(o, e) : false; }).ofObject() : {});\r\n        return toReturn;\r\n    }\r\n\r\n    private makeItemTemplate(leftside) {\r\n        const $ = go.GraphObject.make;\r\n        var UnselectedBrush = \"lightgray\";  // item appearance, if not \"selected\"\r\n        var SelectedBrush = \"green\";   // item appearance, if \"selected\"\r\n        return $(go.Panel, \"Auto\",\r\n            { margin: new go.Margin(1, 0) },  // some space between ports\r\n            $(go.Shape,\r\n                {\r\n                    name: \"SHAPE\",\r\n                    fill: UnselectedBrush, stroke: \"gray\",\r\n                    geometryString: \"F1 m 0,0 l 5,0 1,4 -1,4 -5,0 1,-4 -1,-4 z\",\r\n                    spot1: new go.Spot(0, 0, 5, 1),  // keep the text inside the shape\r\n                    spot2: new go.Spot(1, 1, -5, 0),\r\n                    // some port-related properties\r\n                    toSpot: go.Spot.Left,\r\n                    toLinkable: leftside,\r\n                    fromSpot: go.Spot.Right,\r\n                    fromLinkable: !leftside,\r\n                    cursor: \"pointer\"\r\n                },\r\n                new go.Binding(\"portId\", \"name\")),\r\n            $(go.TextBlock,\r\n                new go.Binding(\"text\", \"name\"),\r\n                { // allow the user to select items -- the background color indicates whether \"selected\"\r\n                    isActionable: true,\r\n                    //?? maybe this should be more sophisticated than simple toggling of selection\r\n                    click: function (e, tb) {\r\n                        var shape = tb.panel.findObject(\"SHAPE\");\r\n                        if (shape !== null) {\r\n                            // don't record item selection changes\r\n                            var oldskips = shape.diagram.skipsUndoManager;\r\n                            shape.diagram.skipsUndoManager = true;\r\n                            // toggle the Shape.fill\r\n                            if (shape.fill === UnselectedBrush) {\r\n                                shape.fill = SelectedBrush;\r\n                            } else {\r\n                                shape.fill = UnselectedBrush;\r\n                            }\r\n                            shape.diagram.skipsUndoManager = oldskips;\r\n                        }\r\n                    }\r\n                })\r\n        );\r\n    }\r\n\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OutputService.html":{"url":"injectables/OutputService.html","title":"injectable - OutputService","body":"\n                   \n\n\n\n\n\n  Injectables\n  OutputService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/output/services/output.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(messageService: MessageService, loggingService: LoggingService, httpErrorHandler: HttpErrorHandler)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAll\n                                \n                            \n            \n                            \n                                \n            getAll()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private handleError\n                                \n                            \n                            \n                                \n                                    handleError:     HandleError\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\r\nimport { HandleError, HttpErrorHandler } from \"../../core/services/http-error-handler.service\";\r\nimport { MessageService } from \"../../core/services/message.service\";\r\nimport { LoggingService } from \"../../core/services/logging.service\";\r\n\r\n@Injectable()\r\nexport class  OutputService {\r\n\r\n    private handleError: HandleError;\r\n \r\n  constructor(    \r\n    private messageService: MessageService,\r\n    private loggingService: LoggingService,\r\n   private httpErrorHandler: HttpErrorHandler) {      \r\n    this.handleError = httpErrorHandler.createHandleError('ConfigService');\r\n  }\r\n\r\n\r\n  getAll(){\r\n    let  infos:string []=[];\r\n    this.loggingService.logs.forEach(inn=> infos.push(inn));\r\n    this.messageService.messages.forEach(inn=> infos.push(inn));\r\n      return infos;\r\n  }\r\n \r\n\r\n   \r\n\r\n  \r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopologyDetailResolver.html":{"url":"injectables/TopologyDetailResolver.html","title":"injectable - TopologyDetailResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  TopologyDetailResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topology/services/topology-detail-resolver.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(cs: TopologyService, router: Router)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/take';\r\nimport { Injectable }             from '@angular/core';\r\nimport { Observable }             from 'rxjs/Observable';\r\nimport { Router, Resolve, RouterStateSnapshot,\r\n         ActivatedRouteSnapshot } from '@angular/router';\r\n \r\nimport { Topology } from '../../core/models/topology';\r\nimport { TopologyService } from '../../core/services/topology.service';\r\n \r\n\r\n@Injectable()\r\nexport class TopologyDetailResolver implements Resolve {\r\n  constructor(private cs: TopologyService, private router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\r\n    let id = route.paramMap.get('id');\r\n\r\n    return this.cs.getTopology(id).take(1).map(topo => {\r\n      if (topo) {\r\n        return topo;\r\n      } else { // id not found\r\n        this.router.navigate(['/crisis-center']);\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopologyService.html":{"url":"injectables/TopologyService.html","title":"injectable - TopologyService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TopologyService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/topology.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(httpClient: HttpClient, configService: ConfigService, httpErrorHandler: HttpErrorHandler)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getTopologies\n                                \n                            \n            \n                            \n                                \n            getTopologies()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTopology\n                                \n                            \n            \n                            \n                                \n            getTopology(id: string | number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     initAll\n                                \n                            \n            \n                            \n                                \n            initAll()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private createTopo\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createTopo(topoItem: TopologyItem)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private setImage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setImage(nodeData: NodeDataArray)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private createLinkData\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createLinkData(link: ILink)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     LinkDataArray\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private createNodeData\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createNodeData(device: IDevice)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addTopology\n                                \n                            \n            \n                            \n                                \n            addTopology(name: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private handleError\n                                \n                            \n                            \n                                \n                                    handleError:     HandleError\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static nextCrisisId\n                                \n                            \n                            \n                                \n                                    nextCrisisId:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 100\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private topologies$\n                                \n                            \n                            \n                                \n                                    topologies$:     BehaviorSubject\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     topologyUrl\n                                \n                            \n                            \n                                \n                                    topologyUrl:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\r\nimport { Topology, NodeDataArray, BottomArray, LinkDataArray } from \"../../core/models/topology\";\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/map';\r\nimport { ConfigService } from \"../../core/services/config-service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { HttpErrorHandler, HandleError } from \"../../core/services/http-error-handler.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ITopologyItem, TopologyItem } from \"../../core/models/bs/topology-item\";\r\nimport { IDevice } from \"../models/bs/idevice\";\r\nimport { ILink } from \"../models/bs/ilink\";\r\n\r\nconst TOPOLOGIES = [];\r\n\r\n@Injectable()\r\nexport class TopologyService {\r\n\r\n  static nextCrisisId = 100;\r\n  private handleError: HandleError;\r\n  topologyUrl: string;\r\n  private topologies$: BehaviorSubject = new BehaviorSubject(TOPOLOGIES);\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private configService: ConfigService,\r\n    private httpErrorHandler: HttpErrorHandler) {\r\n\r\n    this.handleError = httpErrorHandler.createHandleError('TodoService');\r\n\r\n    this.configService.getConfig_2().subscribe(ii => this.topologyUrl = ii.topologyUrl\r\n      , error => { }, () => { this.initAll(); });\r\n\r\n  }\r\n  getTopologies() {\r\n\r\n    //TODO: find out a new strategy for this!!! --->initial again before to call all topo\r\n    this.initAll();\r\n    return Observable.of(TOPOLOGIES);\r\n  }\r\n\r\n  getTopology(id: number | string) {\r\n    return this.getTopologies()\r\n      // (+) before `id` turns the string into a number\r\n      .map(topos => topos.find(topo => topo.id === +id));\r\n  }\r\n\r\n\r\n  initAll() {\r\n    let obArray = this.httpClient.get(this.topologyUrl)\r\n      .pipe(catchError(this.handleError('initAll() ', [])));\r\n\r\n    //Change BS to PS data.\r\n    obArray.subscribe(topoArray => {\r\n      let topo = undefined;\r\n\r\n      //clear the array \r\n      TOPOLOGIES.splice(0, TOPOLOGIES.length);\r\n\r\n      //fill the topo array with elements\r\n      for (let index = 0; index  {\r\n        let nodeData = this.createNodeData(device);\r\n        topology.nodeDataArray.push(nodeData);\r\n      })\r\n    }\r\n\r\n    //Links\r\n    topology.linkDataArray = [];\r\n    if (topoItem.links) {\r\n      topoItem.links.forEach(link => {\r\n        let linkData = this.createLinkData(link);\r\n        topology.linkDataArray.push(linkData);\r\n      })\r\n    }\r\n\r\n    return topology;\r\n  }\r\n\r\n  private setImage(nodeData: NodeDataArray): void {\r\n    if (nodeData.type == \"1\") {\r\n      nodeData.img = \"assets/images/netX51.PNG\";\r\n    }\r\n    else if (nodeData.type == \"2\") {\r\n      nodeData.img = \"assets/images/NetTap.PNG\";\r\n    }\r\n    else {\r\n      nodeData.img = \"assets/images/cfix.PNG\";\r\n    }\r\n\r\n  }\r\n\r\n  private createLinkData(link: ILink): LinkDataArray {\r\n    let linkData = new LinkDataArray();\r\n    linkData.from = link.from;\r\n    linkData.fromPort = link.fromPort;\r\n    linkData.to = link.to;\r\n    linkData.toPort = link.toPort;\r\n\r\n    //additinal\r\n    linkData.linkColor = \"#74512\";\r\n    return linkData;\r\n  }\r\n\r\n\r\n  private createNodeData(device: IDevice) {\r\n    let nodeData = new NodeDataArray();\r\n    nodeData.bottomArray = [];\r\n    //create ports\r\n    for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopologyWorkerResolver.html":{"url":"injectables/TopologyWorkerResolver.html","title":"injectable - TopologyWorkerResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  TopologyWorkerResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/topology/services/topology-worker-resolver.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(topologyService: TopologyService, router: Router)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/take';\r\nimport { Injectable }             from '@angular/core';\r\nimport { Observable }             from 'rxjs/Observable';\r\nimport { Router, Resolve, RouterStateSnapshot,\r\n         ActivatedRouteSnapshot } from '@angular/router';\r\n \r\nimport { Topology } from '../../core/models/topology';\r\nimport { TopologyService } from '../../core/services/topology.service';\r\n \r\n\r\n@Injectable()\r\nexport class TopologyWorkerResolver implements Resolve {\r\n  constructor(private topologyService: TopologyService, private router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\r\n    let id = route.paramMap.get('id');\r\n\r\n    return this.topologyService.getTopology(id).take(1).map(topo => {\r\n      if (topo) {\r\n        return topo;\r\n      } else { // id not found\r\n        this.router.navigate(['/crisis-center']);\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    about\n            \n            \n            \n            /appabout\n        \n        \n            \n                    appabout\n            \n            \n            AboutDescriptionComponent\n            \n        \n        \n            \n                    \" \"\n            \n            full\n            \n            /home\n        \n        \n            \n                    home\n            \n            \n            HomeComponent\n            \n        \n        \n            \n                    app-output\n            \n            \n            OutputComponent\n            \n        \n        \n            \n                    app-topology-home\n            \n            \n            TopologyHomeComponent\n            \n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     address1\n                                \n                            \n                            \n                                \n                                    address1:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     address2\n                                \n                            \n                            \n                                \n                                    address2:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     alternative_phone\n                                \n                            \n                            \n                                \n                                    alternative_phone:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     city\n                                \n                            \n                            \n                                \n                                    city:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     company\n                                \n                            \n                            \n                                \n                                    company:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     country_id\n                                \n                            \n                            \n                                \n                                    country_id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     firstname\n                                \n                            \n                            \n                                \n                                    firstname:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     full_name\n                                \n                            \n                            \n                                \n                                    full_name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     lastname\n                                \n                            \n                            \n                                \n                                    lastname:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     phone\n                                \n                            \n                            \n                                \n                                    phone:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     state_id\n                                \n                            \n                            \n                                \n                                    state_id:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     state_name\n                                \n                            \n                            \n                                \n                                    state_name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     state_text\n                                \n                            \n                            \n                                \n                                    state_text:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     zipcode\n                                \n                            \n                            \n                                \n                                    zipcode:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Address {\r\n    id: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    full_name: string;\r\n    address1: string;\r\n    address2: string;\r\n    city: string;\r\n    zipcode: string;\r\n    phone: string;\r\n    company: string;\r\n    alternative_phone: string;\r\n    country_id: string;\r\n    state_id: string;\r\n    state_name: string;\r\n    state_text: string;\r\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     navigateTo\n                                \n                            \n            \n                            \n                                \n            navigateTo()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getParagraphText\n                                \n                            \n            \n                            \n                                \n            getParagraphText()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo() {\r\n    return browser.get('/');\r\n  }\r\n\r\n  getParagraphText() {\r\n    return element(by.css('app-root h1')).getText();\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BottomArray.html":{"url":"classes/BottomArray.html","title":"class - BottomArray","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  BottomArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(portColor: string, portId: string)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     portColor\n                                \n                            \n                            \n                                \n                                    portColor:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     portId\n                                \n                            \n                            \n                                \n                                    portId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomLink.html":{"url":"classes/CustomLink.html","title":"class - CustomLink","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  CustomLink\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utils/custom-link.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     computeEndSegmentLength\n                                \n                            \n            \n                            \n                                \n            computeEndSegmentLength(node: any, port: any, spot: any, from: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasCurviness\n                                \n                            \n            \n                            \n                                \n            hasCurviness()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     computeCurviness\n                                \n                            \n            \n                            \n                                \n            computeCurviness()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     findSidePortIndexAndCount\n                                \n                            \n                            \n                                \n                                    findSidePortIndexAndCount:     (node: any, port: any) => any[]\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import * as go from 'gojs';\r\n\r\nexport class CustomLink extends go.Link {\r\n    constructor() {\r\n        super();\r\n        this.routing = go.Link.Orthogonal;\r\n    }\r\n\r\n    findSidePortIndexAndCount = function (node, port) {\r\n        var nodedata = node.data;\r\n\r\n        if (nodedata !== null) {\r\n            var portdata = port.data;\r\n            var side = port._side;\r\n            var arr = nodedata[side + \"Array\"];\r\n            var len = arr.length;\r\n            for (var i = 0; i  20 || Math.abs(thispt.y - otherpt.y) > 20) {\r\n                var info = this.findSidePortIndexAndCount(node, port);\r\n                var idx = info[0];\r\n                var count = info[1];\r\n                if (port._side == \"top\" || port._side == \"bottom\") {\r\n                    if (otherpt.x  20 || Math.abs(frompt.y - topt.y) > 20) {\r\n                if ((fromspot.equals(go.Spot.Left) || fromspot.equals(go.Spot.Right)) &&\r\n                    (tospot.equals(go.Spot.Left) || tospot.equals(go.Spot.Right))) {\r\n                    var fromseglen = this.computeEndSegmentLength(fromnode, fromport, fromspot, true);\r\n                    var toseglen = this.computeEndSegmentLength(tonode, toport, tospot, false);\r\n                    var c = (fromseglen - toseglen) / 2;\r\n                    if (frompt.x + fromseglen >= topt.x - toseglen) {\r\n                        if (frompt.y  topt.y) return -c;\r\n                    }\r\n                } else if ((fromspot.equals(go.Spot.Top) || fromspot.equals(go.Spot.Bottom)) &&\r\n                    (tospot.equals(go.Spot.Top) || tospot.equals(go.Spot.Bottom))) {\r\n                    var fromseglen = this.computeEndSegmentLength(fromnode, fromport, fromspot, true);\r\n                    var toseglen = this.computeEndSegmentLength(tonode, toport, tospot, false);\r\n                    var c = (fromseglen - toseglen) / 2;\r\n                    if (frompt.x + fromseglen >= topt.x - toseglen) {\r\n                        if (frompt.y  topt.y) return -c;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return super.computeCurviness.call(this);\r\n    }\r\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkDataArray.html":{"url":"classes/LinkDataArray.html","title":"class - LinkDataArray","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  LinkDataArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(portColor: string, portId: string)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     portColor\n                                \n                            \n                            \n                                \n                                    portColor:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     portId\n                                \n                            \n                            \n                                \n                                    portId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeDataArray.html":{"url":"classes/NodeDataArray.html","title":"class - NodeDataArray","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  NodeDataArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(portColor: string, portId: string)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     portColor\n                                \n                            \n                            \n                                \n                                    portColor:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     portId\n                                \n                            \n                            \n                                \n                                    portId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Port.html":{"url":"classes/Port.html","title":"class - Port","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Port\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(portColor: string, portId: string)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     portColor\n                                \n                            \n                            \n                                \n                                    portColor:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     portId\n                                \n                            \n                            \n                                \n                                    portId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/todo.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isComplete\n                                \n                            \n                            \n                                \n                                    isComplete:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Todo {\r\n    id: number;\r\n    name: string;\r\n    isComplete: boolean; \r\n  }\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Topology.html":{"url":"classes/Topology.html","title":"class - Topology","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Topology\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(portColor: string, portId: string)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     portColor\n                                \n                            \n                            \n                                \n                                    portColor:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     portId\n                                \n                            \n                            \n                                \n                                    portId:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TopologyItem.html":{"url":"classes/TopologyItem.html","title":"class - TopologyItem","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  TopologyItem\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/bs/topology-item.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     description\n                                \n                            \n                            \n                                \n                                    description:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     devices\n                                \n                            \n                            \n                                \n                                    devices:     IDevice[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     links\n                                \n                            \n                            \n                                \n                                    links:     ILink[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     numberDevices\n                                \n                            \n                            \n                                \n                                    numberDevices:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     protocols\n                                \n                            \n                            \n                                \n                                    protocols:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./idevice\";\r\nimport { ILink } from \"./ilink\";\r\n\r\nexport interface ITopologyItem {\r\n\r\n    id: number;\r\n    name: string;\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n}\r\n\r\nexport class TopologyItem implements ITopologyItem {\r\n\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    id: number;\r\n    name: string;\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guard/can-deactivate-guard.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     () => any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     () => any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable }    from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable }    from 'rxjs/Observable';\r\n\r\nexport interface CanComponentDeactivate {\r\n canDeactivate: () => Observable | Promise | boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class CanDeactivateGuard implements CanDeactivate {\r\n  canDeactivate(component: CanComponentDeactivate) {\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/config.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        homeUrl\n                                    \n                                \n                                \n                                    \n                                        homeUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        todoUrl\n                                    \n                                \n                                \n                                    \n                                        todoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        topologyUrl\n                                    \n                                \n                                \n                                    \n                                        topologyUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface Config {\r\n    topologyUrl: string;\r\n    todoUrl: string;\r\n\r\n    homeUrl: string;\r\n \r\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBottomArray.html":{"url":"interfaces/IBottomArray.html","title":"interface - IBottomArray","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IBottomArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        portColor\n                                    \n                                \n                                \n                                    \n                                        portColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portId\n                                    \n                                \n                                \n                                    \n                                        portId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDevice.html":{"url":"interfaces/IDevice.html","title":"interface - IDevice","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IDevice\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/bs/idevice.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        dtmInfo\n                                    \n                                \n                                \n                                    \n                                        dtmInfo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        img\n                                    \n                                \n                                \n                                    \n                                        img:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        ports\n                                    \n                                \n                                \n                                    \n                                        ports:     IPort[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPort[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        supportProtocol\n                                    \n                                \n                                \n                                    \n                                        supportProtocol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        vendor\n                                    \n                                \n                                \n                                    \n                                        vendor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IPort } from \"./iport\";\r\n\r\n\r\n\r\nexport interface IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILink.html":{"url":"interfaces/ILink.html","title":"interface - ILink","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ILink\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/bs/ilink.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fromPort\n                                    \n                                \n                                \n                                    \n                                        fromPort:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        toPort\n                                    \n                                \n                                \n                                    \n                                        toPort:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface ILink {\r\n\r\n  id: string;\r\n  type: string;\r\n\r\n  //standart properties\r\n  from: string;\r\n  to: string;\r\n  fromPort: string;\r\n  toPort: string;\r\n\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPort.html":{"url":"interfaces/IPort.html","title":"interface - IPort","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IPort\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/bs/iport.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        fromId\n                                    \n                                \n                                \n                                    \n                                        fromId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portColor\n                                    \n                                \n                                \n                                    \n                                        portColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portId\n                                    \n                                \n                                \n                                    \n                                        portId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        toId\n                                    \n                                \n                                \n                                    \n                                        toId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface IPort {   \r\n    portColor :string ;\r\n    fromId :string ;\r\n    portId :string ;\r\n    toId :string ;\r\n}\r\n\r\n \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITopology.html":{"url":"interfaces/ITopology.html","title":"interface - ITopology","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ITopology\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        copiesArrayObjects\n                                    \n                                \n                                \n                                    \n                                        copiesArrayObjects:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        copiesArrays\n                                    \n                                \n                                \n                                    \n                                        copiesArrays:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        linkDataArray\n                                    \n                                \n                                \n                                    \n                                        linkDataArray:     LinkDataArray[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LinkDataArray[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        linkFromPortIdProperty\n                                    \n                                \n                                \n                                    \n                                        linkFromPortIdProperty:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        linkToPortIdProperty\n                                    \n                                \n                                \n                                    \n                                        linkToPortIdProperty:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nodeDataArray\n                                    \n                                \n                                \n                                    \n                                        nodeDataArray:     NodeDataArray[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NodeDataArray[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITopologyItem.html":{"url":"interfaces/ITopologyItem.html","title":"interface - ITopologyItem","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ITopologyItem\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/bs/topology-item.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        devices\n                                    \n                                \n                                \n                                    \n                                        devices:     IDevice[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDevice[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:     ILink[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ILink[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        numberDevices\n                                    \n                                \n                                \n                                    \n                                        numberDevices:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        protocols\n                                    \n                                \n                                \n                                    \n                                        protocols:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./idevice\";\r\nimport { ILink } from \"./ilink\";\r\n\r\nexport interface ITopologyItem {\r\n\r\n    id: number;\r\n    name: string;\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n}\r\n\r\nexport class TopologyItem implements ITopologyItem {\r\n\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    id: number;\r\n    name: string;\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeftArray.html":{"url":"interfaces/LeftArray.html","title":"interface - LeftArray","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LeftArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        portColor\n                                    \n                                \n                                \n                                    \n                                        portColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portId\n                                    \n                                \n                                \n                                    \n                                        portId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RightArray.html":{"url":"interfaces/RightArray.html","title":"interface - RightArray","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RightArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        portColor\n                                    \n                                \n                                \n                                    \n                                        portColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portId\n                                    \n                                \n                                \n                                    \n                                        portId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TopArray.html":{"url":"interfaces/TopArray.html","title":"interface - TopArray","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TopArray\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/topology.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        portColor\n                                    \n                                \n                                \n                                    \n                                        portColor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        portId\n                                    \n                                \n                                \n                                    \n                                        portId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { IDevice } from \"./bs/idevice\";\r\nimport { IPort } from \"./bs/iport\";\r\nimport { ITopologyItem } from \"./bs/topology-item\";\r\nimport { ILink } from \"./bs/ilink\";\r\n\r\nexport interface LeftArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\nexport class Port {\r\n    constructor(public portColor: string, public portId: string) {\r\n        this.portColor = portColor;\r\n        this.portId = portId;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface TopArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class BottomArray implements IBottomArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport interface RightArray {\r\n    portColor: string;\r\n    portId: string;\r\n}\r\n\r\nexport class NodeDataArray implements IDevice {\r\n    id: string;\r\n    ports: IPort[];\r\n    name: string;\r\n    type: string;\r\n    img: string;\r\n    key: string;\r\n    state: string;\r\n    vendor: string;\r\n    loc: string;\r\n    supportProtocol: string;\r\n    dtmInfo: string;\r\n    version: string;\r\n    bottomArray: BottomArray[];\r\n\r\n}\r\n\r\nexport class LinkDataArray implements ILink {\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    from: string;\r\n    to: string;\r\n    fromPort: string;\r\n    toPort: string;\r\n\r\n    //additional properties\r\n    linkColor?: string;\r\n}\r\n\r\nexport interface ITopology {\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\nexport class Topology implements ITopology, ITopologyItem {\r\n    constructor(public id: number, public name: string) {\r\n        this.class = name;\r\n        this.id = id;\r\n    }\r\n    devices: IDevice[];\r\n    links: ILink[];\r\n    numberDevices: number;\r\n    protocols: string;\r\n    description: string;\r\n    class: string;\r\n    copiesArrays: boolean;\r\n    copiesArrayObjects: boolean;\r\n    linkFromPortIdProperty: string;\r\n    linkToPortIdProperty: string;\r\n    nodeDataArray: NodeDataArray[];\r\n    linkDataArray: LinkDataArray[];\r\n}\r\n\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             TOPOLOGIES\n                        \n                    \n                    \n                        \n                            TOPOLOGIES:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             SHAPE_TYPE\n                        \n                    \n                    \n                        \n                            SHAPE_TYPE:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             require\n                        \n                    \n                    \n                        \n                            require:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             context\n                        \n                    \n                    \n                        \n                            context:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    13%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                e2e/app.po.ts\n            \n            \n                classe\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/about/components/about-description.component.ts\n            \n            \n                component\n            \n            \n                AboutDescriptionComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/about/services/dummy-node-template.provider.ts\n            \n            \n                injectable\n            \n            \n                DummyNodeTemplateProvider\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/app/about/services/dummy.shape.provider.ts\n            \n            \n                injectable\n            \n            \n                DummyShapeProvider\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/about/services/link-data.service.ts\n            \n            \n                injectable\n            \n            \n                LinkDataService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/about/services/node-data.service.ts\n            \n            \n                injectable\n            \n            \n                NodeDataService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/guard/can-deactivate-guard.service.ts\n            \n            \n                injectable\n            \n            \n                CanDeactivateGuard\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/core/guard/can-deactivate-guard.service.ts\n            \n            \n                interface\n            \n            \n                CanComponentDeactivate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/core/models/address.ts\n            \n            \n                classe\n            \n            \n                Address\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                src/app/core/models/bs/idevice.ts\n            \n            \n                interface\n            \n            \n                IDevice\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/core/models/bs/ilink.ts\n            \n            \n                interface\n            \n            \n                ILink\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/core/models/bs/iport.ts\n            \n            \n                interface\n            \n            \n                IPort\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/core/models/bs/topology-item.ts\n            \n            \n                classe\n            \n            \n                TopologyItem\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/core/models/bs/topology-item.ts\n            \n            \n                interface\n            \n            \n                ITopologyItem\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/core/models/config.ts\n            \n            \n                interface\n            \n            \n                Config\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/models/todo.ts\n            \n            \n                classe\n            \n            \n                Todo\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                classe\n            \n            \n                BottomArray\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                classe\n            \n            \n                LinkDataArray\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                classe\n            \n            \n                NodeDataArray\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                classe\n            \n            \n                Port\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                classe\n            \n            \n                Topology\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                interface\n            \n            \n                IBottomArray\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                interface\n            \n            \n                ITopology\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                interface\n            \n            \n                LeftArray\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                interface\n            \n            \n                RightArray\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/models/topology.ts\n            \n            \n                interface\n            \n            \n                TopArray\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/core/services/config-service.ts\n            \n            \n                injectable\n            \n            \n                ConfigService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/core/services/http-error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                HttpErrorHandler\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/app/core/services/logging.service.ts\n            \n            \n                injectable\n            \n            \n                LoggingService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/services/message.service.ts\n            \n            \n                injectable\n            \n            \n                MessageService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/core/services/topology.service.ts\n            \n            \n                injectable\n            \n            \n                TopologyService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/core/utils/custom-link.ts\n            \n            \n                classe\n            \n            \n                CustomLink\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/core/utils/diagram.service.ts\n            \n            \n                injectable\n            \n            \n                DiagramService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/core/utils/link-template.service.ts\n            \n            \n                injectable\n            \n            \n                LinkTemplateService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/app/core/utils/node-template.service.ts\n            \n            \n                injectable\n            \n            \n                NodeTemplateService\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                src/app/home/components/description/home-description.component.ts\n            \n            \n                component\n            \n            \n                HomeDescriptionComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/home/components/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/layout/components/footer/layout-footer.component.ts\n            \n            \n                component\n            \n            \n                LayoutFooterComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/layout/components/header/layout-header.component.ts\n            \n            \n                component\n            \n            \n                LayoutHeaderComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/layout/components/main/layout-main.component.ts\n            \n            \n                component\n            \n            \n                LayoutMainComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/layout/components/navi/layout-navi.component.ts\n            \n            \n                component\n            \n            \n                LayoutNaviComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/output/services/output.service.ts\n            \n            \n                injectable\n            \n            \n                OutputService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/topology/components/topology-detail/topology-detail.component.ts\n            \n            \n                component\n            \n            \n                TopologyDetailComponent\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                src/app/topology/components/topology-home/topology-home.component.ts\n            \n            \n                component\n            \n            \n                TopologyHomeComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/topology/components/topology-list/topology-list.component.ts\n            \n            \n                component\n            \n            \n                TopologyListComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/topology/components/topology-worker/topology-worker.component.ts\n            \n            \n                component\n            \n            \n                TopologyWorkerComponent\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                src/app/topology/services/topology-detail-resolver.service.ts\n            \n            \n                injectable\n            \n            \n                TopologyDetailResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/topology/services/topology-worker-resolver.service.ts\n            \n            \n                injectable\n            \n            \n                TopologyWorkerResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
